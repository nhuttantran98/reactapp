{"version":3,"sources":["Components/SiderBar/SiderBar.js","Components/UserFunction/UserFunction.js","Components/UserPage/UserTable/UserTable.js","Components/UserPage/UserAddAccount/UserAddAccount.js","Components/auth.js","Components/Login/Login.js","Components/Machine/ChartMachine/ChartMachine.js","Components/Machine/ChartMachineBar/ChartMachineBar.js","Components/MachineFunction/MachineFunction.js","Components/Machine/Device/Device.js","Components/Machine/Device/MiniDevice.js","Components/Machine/Machine.js","Components/ProtectRoute/protectRoute.js","Components/UserPage/EditUser/EditUser.js","Components/MachinePage/MachineTable/MachineTable.js","Components/MachinePage/MachineAdd/MachineAdd.js","Components/MachinePage/MachineEdit/MachineEdit.js","Components/page404/page404.js","Components/DataStatitics/DataStatitics.js","Components/Script.js/Script.js","Components/ProtectRoute/acceptQLRoute.js","Components/TestSocket/TestSocket.js","Components/DataStatitics/ShowChartSetup.js","Components/RouterURL/RouterURL.js","Components/Navbar/Navbar.js","Components/App/App.js","serviceWorker.js","index.js"],"names":["Sider","Layout","SubMenu","Menu","SiderBar","state","collapse","onCollapse","collapsed","setState","collapsible","this","className","style","minHeight","textAlign","paddingTop","float","src","color","level","theme","defaultSelectedKeys","mode","Item","key","PieChartOutlined","to","DesktopOutlined","title","UserOutlined","TeamOutlined","FileOutlined","Component","register","newUser","axios","post","first_name","last_name","email","password","dob","role","phone","then","response","console","log","data","login","user","localStorage","setItem","token","catch","err","Column","Table","ColumnGroup","Content","UserTable","props","deleteUser","res","error","swal","text","icon","button","tempData","filter","item","get","headers","getItem","result","map","id","firstname","lastname","rest","margin","padding","dataSource","dataIndex","render","type","pathname","aboutProps","danger","onClick","layout","labelCol","span","wrapperCol","tailLayout","offset","UserAddAccount","formRef","React","createRef","onFinish","values","DOB","format","history","push","onReset","current","resetFields","onFill","setFieldsValue","note","gender","background","fontSize","marginRight","paddingBottom","ref","name","label","rules","message","required","hasFeedback","Password","dependencies","getFieldValue","validator","rule","value","Promise","reject","resolve","Group","showTime","htmlType","authenticate","cb","Login","username","auth","width","marginTop","initialValues","remember","prefix","placeholder","LockOutlined","ChartMachine","chartRef","myChart","datasets","update","Chart","fill","lineTension","borderColor","borderWidth","options","display","scales","xAxes","time","unit","displayFormats","yAxes","ticks","beginAtZero","max","machine","position","description","code","addScript","script","myScript","JSON","stringify","totalTime","useremail","getAllScripts","scripts","getDataChartSetup","setup","Device","isChange","lightStatus","status","size","AlertOutlined","backgroundColor","renderOn","renderOff","borderRadius","paddingLeft","disabled","isDisabled","checked","changeStatus","fontFamily","fontWeight","children","showStatus","MiniDevice","marksMass","0","50","200","Option","Select","Machine","dataChart","getAckServer","location","dataDevice","statusMachine","stt","getDataServer","dataSample","x","y","temp","length","shift","dataLineChart","componentWillUnmount","socket","close","onChangeTempValue","dataControl","tempValue","onChangeHumidValue","humidValue","onChangeMassValue","massValue","waitFor","sttStr","ms","r","sttArr","split","deviceArr","forEach","ele","idx","Boolean","Number","emit","setTimeout","asyncForEach","array","callback","a","index","start","arr","element","updateConfigTimeFinish","onChangeSelect","selectedFruit","onChangeSelectScript","listScript","timeFinish","timeActive","choosenScript","nameOfChoosenScript","preState","newItems","countdownRef","timeStartActive","timeFinishActive","isChooseScript","flagTime","standardTime","idSetup","typeOfFruit","dataNewScript","socketIOClient","on","allScripts","machineCode","e","tempTime","Date","getTime","timeStart","toString","obj","now","prevState","onClickSendConfigNotTimeFinish","myTime","i","scriptStr","resultForlistScript","resultForSubmit","updateTimeFinishSetup","slice","user_email","machine_name","mass","addSetup","tempFinish","rs","parse","toISOString","onClickCreateScript","RetweetOutlined","border","marks","defaultValue","min","onChange","height","marginLeft","textTransform","shape","send","finish","flexWrap","bind","onClickChooseScript","renderPeriod","renderTimeActive","onClickStartScript","content","renderChooseScript","renderCreateScript","ChartMachineBar","showSwitch","protectedRoute","component","isAuthenticated","from","EditUser","moment","MachineTable","checkStatusMachine","find","to_slug","deleteMachine","str","toLowerCase","replace","renderReady","lineHeight","showStatusMachine","TextArea","Input","MachineAdd","row","MachineEdit","DataStatitics","dataResult","generateReport","responseType","pdfBlob","Blob","saveAs","handleOnRowShowData","record","setupId","handleOnRowClick","dataUpdateResult","findIndex","el","myData","object","onRow","rowIndex","onDoubleClick","Script","acceptQLRoute","isQL","TestSocket","intervalId","clear","setInterval","humid","clearInterval","onClickTest","onClickSendData","onClickSendDataAuto","ShowChartSetup","dataChartBar","dataBarChart","created","RouterURL","exact","path","withRouter","Navbar","loginRegLink","paddingRight","LoginOutlined","preventDefault","logout","usertoken","href","logOut","LogoutOutlined","Header","Footer","App","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+hBAYOA,EAAUC,IAAVD,MACCE,EAAYC,IAAZD,QA8FOE,E,2MA3FXC,MAAQ,CACJC,UAAU,G,EAGZC,WAAa,SAAAC,GACX,EAAKC,SAAS,CAAED,e,wEAGhB,OACI,kBAACR,EAAD,CAAOU,aAAW,EAACF,UAAWG,KAAKN,MAAMG,UAAWD,WAAYI,KAAKJ,YACvE,yBAAKK,UAAU,OAAOC,MAAO,CAACC,UAAU,OAAOC,UAAU,SAASC,WAAW,SAC3E,kBAAC,IAAD,CAAQH,MAAO,CAAEI,MAAO,QAAUC,IAAI,kBACtC,kBAAC,IAAD,CAAOL,MAAO,CAAEM,MAAO,SAAWC,MAAO,GAAzC,gBAGF,kBAAC,IAAD,CAAMC,MAAM,OAAOC,oBAAqB,CAAC,KAAMC,KAAK,UAClD,kBAAC,IAAKC,KAAN,CAAWC,IAAI,KACb,kBAACC,EAAA,EAAD,MACA,oEACE,kBAAC,IAAD,CAAMC,GAAG,sBAEb,kBAAC,IAAKH,KAAN,CAAWC,IAAI,KACb,kBAACG,EAAA,EAAD,MACA,4DACA,kBAAC,IAAD,CAAMD,GAAG,aAEX,kBAACzB,EAAD,CACEuB,IAAI,OACJI,MACE,8BACE,kBAACC,EAAA,EAAD,MACA,qEAIJ,kBAAC,IAAKN,KAAN,CAAWC,IAAI,KAAf,oCAEE,kBAAC,IAAD,CAAME,GAAG,eAEX,kBAAC,IAAKH,KAAN,CAAWC,IAAI,KAAf,sCACA,kBAAC,IAAKD,KAAN,CAAWC,IAAI,KAAf,6BAEE,kBAAC,IAAD,CAAME,GAAG,gBAGb,kBAACzB,EAAD,CACEuB,IAAI,OACJI,MACE,8BACE,kBAACC,EAAA,EAAD,MACA,mEAIJ,kBAAC,IAAKN,KAAN,CAAWC,IAAI,KAAf,+BAEE,kBAAC,IAAD,CAAME,GAAG,kBAEX,kBAAC,IAAKH,KAAN,CAAWC,IAAI,KAAf,2BAEE,kBAAC,IAAD,CAAME,GAAG,mBAGb,kBAACzB,EAAD,CACEuB,IAAI,OACJI,MACE,8BACE,kBAACE,EAAA,EAAD,MACA,mDAIJ,kBAAC,IAAKP,KAAN,CAAWC,IAAI,KAAf,WAEE,kBAAC,IAAD,CAAME,GAAG,YAEX,kBAAC,IAAKH,KAAN,CAAWC,IAAI,KAAf,aAEF,kBAAC,IAAKD,KAAN,CAAWC,IAAI,MAEb,kBAACO,EAAA,EAAD,MAFF,kCAIE,kBAAC,IAAD,CAAML,GAAG,c,GAnFAM,a,oGCbVC,EAAW,SAAAC,GACpB,OAAOC,IACFC,KAAK,kBAAkB,CACpBC,WAAYH,EAAQG,WACpBC,UAAUJ,EAAQI,UAClBC,MAAOL,EAAQK,MACfC,SAAUN,EAAQM,SAClBC,IAAKP,EAAQO,IACbC,KAAMR,EAAQQ,KACdC,MAAOT,EAAQS,QAElBC,MAAK,SAAAC,GAGF,OADAC,QAAQC,IAAI,aACLF,EAASG,SAIfC,EAAQ,SAAAC,GACjB,OAAOf,IACFC,KAAK,eAAe,CACjBG,MAAMW,EAAKX,MACXC,SAASU,EAAKV,WAEjBI,MAAK,SAAAC,GAKF,OAJAM,aAAaC,QAAQ,YAAYF,EAAKX,OACtCY,aAAaC,QAAQ,YAAYP,EAASG,KAAKK,OAC/CF,aAAaC,QAAQ,OAAOP,EAASG,KAAKN,MAC1CI,QAAQC,IAAIF,GACLA,EAASG,QAEnBM,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,O,iBC5BhBC,EAAwBC,IAAxBD,OAAQE,EAAgBD,IAAhBC,YACRC,EAAY3D,IAAZ2D,QAqGOC,E,YAhGX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAcVC,WAAa,SAAAvB,GD8DS,IAAAW,KC7DP,CAACX,MAAMA,GD8DfJ,IACFC,KAAK,qBAAqB,CACvBG,MAAOW,EAAKX,QAEfK,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MCvEeX,MAAK,SAAAmB,GAE3B,GADAjB,QAAQC,IAAIR,GACTwB,EAAIC,MACHC,IAAK,CACDrC,MAAO,YACPsC,KAAM,oCACNC,KAAM,QACNC,OAAQ,WAEX,CAED,IAAIC,EAAW,EAAKjE,MAAM4C,KAAKsB,QAAO,SAAAC,GAAI,OAAIA,EAAKhC,QAAUA,KAC7DO,QAAQC,IAAIsB,GACZ,EAAK7D,SAAS,CACVwC,KAAMqB,IAEVJ,IAAK,CACDrC,MAAO,aACPsC,KAAM,2BACNC,KAAM,UACNC,OAAQ,YAlCpB,EAAKhE,MAAQ,CAAC4C,KAAK,IAFJ,E,mND2BZb,IACFqC,IAAI,uBAAuB,CACxBC,QAAQ,CACJ,cAAkBtB,aAAauB,QAAQ,gBAG9C9B,MAAK,SAAAC,GACF,OAAOA,EAASG,QAEnBM,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,M,OC9BVV,E,OAEF8B,EADS9B,EACO+B,KAAI,gBAAOpD,EAAP,EAAGqD,GAAqBC,EAAxB,EAAYzC,WAAkC0C,EAA9C,EAAmCzC,UAAwB0C,EAA3D,mEAAyExD,MAAKsD,YAAWC,YAAaC,MAC9HtE,KAAKF,SAAS,CACVwC,KAAM2B,I,qIA+BJ,IAAD,OAEL,OACI,kBAAChB,EAAD,CAAS/C,MAAO,CAAEqE,OAAQ,WACtB,kBAAC,IAAD,CAAYrE,MAAO,CAAEqE,OAAQ,WACzB,kBAAC,IAAW1D,KAAZ,MACA,kBAAC,IAAWA,KAAZ,OAEJ,yBAAKZ,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,GAAIrE,UAAW,MACzE,kBAAC,IAAD,CAAOsE,WAAYzE,KAAKN,MAAM4C,MAC9B,kBAACU,EAAD,CAAa9B,MAAM,aACf,kBAAC4B,EAAD,CAAQ5B,MAAM,aAAawD,UAAU,YAAY5D,IAAI,cACrD,kBAACgC,EAAD,CAAQ5B,MAAM,YAAYwD,UAAU,WAAW5D,IAAI,cAEvD,kBAACgC,EAAD,CAAQ5B,MAAM,OAAOwD,UAAU,OAAO5D,IAAI,OAAO6D,OAAU,SAAA3C,GACvD,IAAIxB,EAAe,WAAPwB,EAAgB,MAAM,OAClC,OACI,8BACI,kBAAC,IAAD,CAAKxB,MAAOA,GAAQwB,OAKhC,kBAACc,EAAD,CAAQ5B,MAAM,QAAQwD,UAAU,QAAQ5D,IAAI,UAC5C,kBAACgC,EAAD,CAAQ5B,MAAM,QAAQwD,UAAU,QAAQ5D,IAAI,UAC5C,kBAACgC,EAAD,CACI5B,MAAM,SACNJ,IAAI,SACJ4D,UAAU,QACVC,OAAQ,SAAA9C,GAAK,OACT,8BACI,kBAAC,IAAD,CAAQ+C,KAAK,QAET,kBAAC,IAAD,CAAM5D,GAAI,CACN6D,SAAS,aACTC,WAAW,CACPjD,MAAM,GAAD,OAAIA,MAHjB,SAOJ,kBAAC,IAAD,CAAQ+C,KAAK,OAAOG,QAAM,EAACC,QAAS,kBAAI,EAAK5B,WAAWvB,KAAxD,qB,GApFJP,a,oCCJlB2D,EAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,EAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAgJpBI,E,2MA7IXC,QAAUC,IAAMC,Y,EAChBC,SAAW,SAAAC,GACP,IAAMC,EAAMD,EAAM,IACZ3B,EAAM,eACL2B,EADK,CAER,IAAOC,EAAIC,OAAO,gBAEtBvE,EAAS,CAACI,WAAYsC,EAAOtC,WAAYC,UAAWqC,EAAOrC,UAAWE,SAAUmC,EAAOnC,SAAUD,MAAOoC,EAAOpC,MAAME,IAAKkC,EAAOlC,IAAIE,MAAOgC,EAAOhC,MAAOD,KAAMiC,EAAOjC,OAAOE,MAAK,SAAAmB,GAC/KjB,QAAQC,IAAIgB,GAITA,EAAIC,MACHC,IAAK,CACDrC,MAAO,YACPsC,KAAM,sCACNC,KAAM,QACNC,OAAQ,QAIZH,IAAK,CACDrC,MAAO,aACPsC,KAAM,yCACNC,KAAM,UACNC,OAAQ,OAEV,EAAKP,MAAM4C,QAAQC,KAAnB,iBAGV5D,QAAQC,IAAI4B,I,EAGhBgC,QAAU,WACN,EAAKT,QAAQU,QAAQC,e,EAGzBC,OAAS,WACL,EAAKZ,QAAQU,QAAQG,eAAe,CAChCC,KAAM,eACNC,OAAQ,U,wEAKZ,OACI,yBAAKrG,MAAO,CAACqE,OAAO,OAAQiC,WAAW,UACnC,wBAAItG,MAAO,CAACqE,OAAO,OAAOkC,SAAS,SAAnC,6BACA,yBAAKvG,MAAO,CAACwG,YAAY,QAAQC,cAAc,SAC3C,kBAAC,IAAD,iBAAU1B,EAAV,CAAkB2B,IAAK5G,KAAKwF,QAASqB,KAAK,cAAclB,SAAU3F,KAAK2F,WACnE,kBAAC,IAAK9E,KAAN,CAAWgG,KAAK,QAAQC,MAAM,QAAQC,MAAO,CACD,CAAEnC,KAAM,QAAQoC,QAAS,mCACzB,CAAEC,UAAU,EAAKD,QAAS,yBAElE,kBAAC,IAAD,OAGJ,kBAAC,IAAKnG,KAAN,CACIgG,KAAK,WACLC,MAAM,WACNC,MAAO,CACP,CACIE,UAAU,EACVD,QAAS,gCAGbE,aAAW,GAEX,kBAAC,IAAMC,SAAP,OAGJ,kBAAC,IAAKtG,KAAN,CACIgG,KAAK,UACLC,MAAM,mBACNM,aAAc,CAAC,YACfF,aAAW,EACXH,MAAO,CACP,CACIE,UAAU,EACVD,QAAS,4CAEb,gBAAGK,EAAH,EAAGA,cAAH,MAAwB,CACpBC,UADoB,SACVC,EAAMC,GAChB,OAAKA,GAASH,EAAc,cAAgBG,EAGrCC,QAAQC,OAAO,mDAFXD,QAAQE,eAOvB,kBAAC,IAAMR,SAAP,OAGJ,kBAAC,IAAKtG,KAAN,CAAWgG,KAAK,OAAOC,MAAM,sBAAYC,MAAO,CAAC,CAAEE,UAAU,KACzD,kBAAC,IAAMW,MAAP,KACA,kBAAC,IAAD,CAAOJ,MAAM,UAAb,mBACA,kBAAC,IAAD,CAAOA,MAAM,WAAb,sBAIJ,kBAAC,IAAK3G,KAAN,CAAWgG,KAAK,aAAaC,MAAM,8BAAYC,MAAO,CAAC,CAAEE,UAAU,EAC3DD,QAAS,8DACb,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,YAAYC,MAAM,SAAMC,MAAO,CAAC,CAAEE,UAAU,EACpDD,QAAS,kCACb,kBAAC,IAAD,OAGJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,MAAMC,MAAM,eAAYC,MAAO,CAAC,CAAEnC,KAAM,SAAUqC,UAAU,EAAMD,QAAS,yBACvF,kBAAC,IAAD,CAAYa,UAAQ,EAAC/B,OAAO,gBAGhC,kBAAC,IAAKjF,KAAN,CAAWgG,KAAK,QAAQC,MAAM,oCAAgBC,MAAO,CAAC,CAAEE,UAAU,EAC1DD,QAAS,6DACb,kBAAC,IAAD,OAGJ,kBAAC,IAAKnG,KAASwE,EACX,kBAAC,IAAD,CAAQT,KAAK,UAAUkD,SAAS,UAAhC,UAGA,kBAAC,IAAD,CAAQA,SAAS,SAAS9C,QAAShF,KAAKiG,SAAxC,SAGA,kBAAC,IAAD,CAAQrB,KAAK,OAAOkD,SAAS,SAAS9C,QAAShF,KAAKoG,QAApD,qB,GA/HC9E,a,SCkBd,O,WA9BX,aAAc,oBACVtB,KAAK+H,aAAe,G,kDAGlBC,GACFhI,KAAK+H,aAAetF,aAAauB,QAAQ,aACzCgE,M,6BAGGA,GACHhI,KAAK+H,aAAe,GACpBC,M,wCAIA,OAAOhI,KAAK+H,e,6BAIZ,MAAkC,WAA/BtF,aAAauB,QAAQ,U,6BAKxB,MAAkC,YAA/BvB,aAAauB,QAAQ,Y,MC2CjBiE,I,kNAzDXzC,QAAUC,IAAMC,Y,EAChBC,SAAW,SAAAC,GACPrD,EAAM,CAACV,MAAM+D,EAAOsC,SAASpG,SAAS8D,EAAO9D,WAAWI,MAAK,SAAAmB,GACrDA,EAAIC,MAKJC,IAAK,CACDrC,MAAO,YACPsC,KAAM,0BACNC,KAAM,QACNC,OAAQ,OARZyE,GAAK5F,OAAM,WACP,EAAKY,MAAM4C,QAAQC,KAAnB,oB,wEAcZ,OACI,yBAAK9F,MAAO,CAACkI,MAAM,MAAO7D,OAAO,OAAQnE,UAAU,SAASiI,UAAU,SAClE,kBAAC,IAAD,CACAzB,IAAK5G,KAAKwF,QACVqB,KAAK,eACL5G,UAAU,aACVqI,cAAe,CAAEC,UAAU,GAC3B5C,SAAU3F,KAAK2F,SACfzF,MAAO,CAACsE,QAAQ,sBAAsBgC,WAAW,UAEjD,kBAAC,IAAK3F,KAAN,CACIgG,KAAK,WACLE,MAAO,CAAC,CAAEE,UAAU,EAAMD,QAAS,iCAEnC,kBAAC,IAAD,CAAOwB,OAAQ,kBAACrH,EAAA,EAAD,CAAclB,UAAU,wBAA0BwI,YAAY,cAEjF,kBAAC,IAAK5H,KAAN,CACIgG,KAAK,WACLE,MAAO,CAAC,CAAEE,UAAU,EAAMD,QAAS,iCAEnC,kBAAC,IAAD,CACIwB,OAAQ,kBAACE,EAAA,EAAD,CAAczI,UAAU,wBAChC2E,KAAK,WACL6D,YAAY,cAGpB,kBAAC,IAAK5H,KAAN,KACI,kBAAC,IAAD,CAAQ+D,KAAK,UAAUkD,SAAS,SAAS7H,UAAU,qBAAnD,iB,GAlDAqB,c,sECsDLqH,G,YAxDb,WAAYxF,GAAQ,IAAD,8BACjB,4CAAMA,KACDyF,SAAWnD,IAAMC,YAFL,E,kFAMjB1F,KAAK6I,QAAQvG,KAAKwG,SAAS,GAAGxG,KAAOtC,KAAKmD,MAAMb,KAChDtC,KAAK6I,QAAQE,W,0CAGb/I,KAAK6I,QAAU,IAAIG,KAAMhJ,KAAK4I,SAAS1C,QAAS,CAC9CtB,KAAM,OACNtC,KAAM,CACJwG,SAAU,CAAC,CACThC,MAAO,cACPxE,KAAM,GACN2G,MAAM,EACNC,YAAa,GACbC,YAAa,MACbC,YAAa,KAGjBC,QAAS,CACPnI,MAAO,CACLsC,KAAM,oBACN8F,SAAS,GAEXC,OAAQ,CACNC,MAAO,CAAC,CACN5E,KAAM,OACN6E,KAAM,CACFC,KAAM,SACNC,eAAe,CACb,OAAU,gBAIlBC,MAAO,CAAC,CACNN,SAAS,EACTO,MAAO,CACHC,aAAa,EACbC,IAAK,a,+BASjB,OACE,4BAAQnD,IAAK5G,KAAK4I,e,GApDGtH,aCyDZqH,G,YAxDb,WAAYxF,GAAQ,IAAD,8BACjB,4CAAMA,KACDyF,SAAWnD,IAAMC,YAFL,E,kFAMjB1F,KAAK6I,QAAQvG,KAAKwG,SAAS,GAAGxG,KAAOtC,KAAKmD,MAAMb,KAChDtC,KAAK6I,QAAQE,W,0CAGb/I,KAAK6I,QAAU,IAAIG,KAAMhJ,KAAK4I,SAAS1C,QAAS,CAC9CtB,KAAM,MACNtC,KAAM,CACJwG,SAAU,CAAC,CACThC,MAAO,WACPxE,KAAM,GACN2G,MAAM,EACNC,YAAa,GACbC,YAAa,OACbC,YAAa,KAGjBC,QAAS,CACPnI,MAAO,CACLsC,KAAM,iBACN8F,SAAS,GAEXC,OAAQ,CACNC,MAAO,CAAC,CACN5E,KAAM,OACN6E,KAAM,CACFC,KAAM,SACNC,eAAe,CACb,OAAU,gBAIlBC,MAAO,CAAC,CACNN,SAAS,EACTO,MAAO,CACHC,aAAa,EACbC,IAAK,a,+BASjB,OACE,4BAAQnD,IAAK5G,KAAK4I,e,GApDGtH,a,UCgBdC,GAAW,SAAAyI,GACpB,OAAOvI,IACFC,KAAK,qBAAqB,CACvBmF,KAAMmD,EAAQnD,KACdoD,SAASD,EAAQC,SACjBC,YAAaF,EAAQE,YACrBC,KAAMH,EAAQG,OAEjBjI,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAI,aACLF,EAASG,QACjBM,OAAM,SAAAC,GACL,OAAOA,MA0GNuH,GAAY,SAAAC,GACrB,IAAIC,EAAWC,KAAKC,UAAUH,EAAOA,QACrC,OAAO5I,IACFC,KAAK,sBAAsB,CACxBmF,KAAMwD,EAAOxD,KACbwD,OAAQC,EACRG,UAAWJ,EAAOI,UAClBC,UAAUL,EAAOK,YAEpBxI,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MAKN8H,GAAgB,SAAAC,GACzB,OAAOnJ,IACFqC,IAAI,2BAA2B,CAC5BC,QAAQ,CACJ,cAAkBtB,aAAauB,QAAQ,gBAG9C9B,MAAK,SAAAC,GACF,OAAOA,EAASG,QAEnBM,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,OAqCXgI,GAAoB,SAAAC,GAC7B,OAAOrJ,IACFC,KAAK,+BAA+B,CACjCyC,GAAI2G,EAAM3G,GACVgG,KAAMW,EAAMX,OAEfjI,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,M,2DC9JJkI,G,YArDX,WAAY5H,GAAO,IAAD,8BACd,4CAAMA,KAKV6H,UAAS,EANS,EAOlBC,YAAY,EAAK9H,MAAM+H,OALnB,EAAKxL,MAAQ,CACTwL,OAAQ,EAAK/H,MAAM+H,QAHT,E,wEAUd,OAAO,kBAAC,IAAD,CAAQC,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,MAAmBlL,MAAO,CAAEmL,gBAAiB,e,kCAI7E,OAAQ,kBAAC,IAAD,CAAQF,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,U,mCAIjC,OAAyB,IAAtBpL,KAAKmD,MAAM6H,UACc,IAArBhL,KAAKiL,YACGjL,KAAKsL,WAGLtL,KAAKuL,aAIhBvL,KAAKiL,YAAYjL,KAAKmD,MAAM+H,QACH,IAAtBlL,KAAKmD,MAAM+H,OACHlL,KAAKsL,WAGLtL,KAAKuL,e,+BAKd,IAAD,OACL,OACI,yBAAKrL,MAAO,CAACqE,OAAO,OAAOiC,WAAY,UAAWhC,QAAQ,WAAWgH,aAAa,QAC9E,yBAAKtL,MAAO,CAACkI,MAAM,OAAOkB,QAAQ,SAC9B,yBAAKpJ,MAAO,CAACkI,MAAM,MAAMqD,YAAY,SAAS,kBAAC,KAAD,CAAQC,SAAU1L,KAAKmD,MAAMwI,WAAYC,QAAS5L,KAAKmD,MAAM+H,OAAQlG,QAAS,WAAM,EAAK7B,MAAM0I,aAAa,EAAK1I,MAAMgB,GAAG,EAAKhB,MAAM+H,YACnL,yBAAKhL,MAAO,CAACkI,MAAM,MAAMhI,UAAU,SAASqG,SAAS,OAAOqF,WAAW,YAAYC,WAAW,SAAW/L,KAAKmD,MAAM6I,UACpH,yBAAK9L,MAAO,CAACkI,MAAM,UAEvB,yBAAKlI,MAAO,CAACE,UAAU,WAClBJ,KAAKiM,mB,GAhDL3K,aCuDN4K,G,YArDX,WAAY/I,GAAO,IAAD,8BACd,4CAAMA,KAKV6H,UAAS,EANS,EAOlBC,YAAY,EAAK9H,MAAM+H,OALnB,EAAKxL,MAAQ,CACTwL,OAAQ,EAAK/H,MAAM+H,QAHT,E,wEAUd,OAAO,kBAAC,IAAD,CAAQC,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,MAAmBlL,MAAO,CAAEmL,gBAAiB,e,kCAI7E,OAAQ,kBAAC,IAAD,CAAQF,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,U,mCAIjC,OAAyB,IAAtBpL,KAAKmD,MAAM6H,UACc,IAArBhL,KAAKiL,YACGjL,KAAKsL,WAGLtL,KAAKuL,aAIhBvL,KAAKiL,YAAYjL,KAAKmD,MAAM+H,QACH,IAAtBlL,KAAKmD,MAAM+H,OACHlL,KAAKsL,WAGLtL,KAAKuL,e,+BAQpB,OACI,yBAAKrL,MAAO,CAACsG,WAAY,UAAWhC,QAAQ,aACxC,yBAAKtE,MAAO,CAACkI,MAAM,OAAOkB,QAAQ,SAC9B,yBAAKpJ,MAAO,CAACkI,MAAM,OAAOhI,UAAU,SAASqG,SAAS,OAAOqF,WAAW,YAAYC,WAAW,SAAW/L,KAAKmD,MAAM6I,WAEzH,yBAAK9L,MAAO,CAACE,UAAU,WAClBJ,KAAKiM,mB,GAhDD3K,a,oBC+BnB6K,GAAY,CACdC,EAAG,OACHC,GAAI,QAEJC,IAAK,CACDpM,MAAO,CACHM,MAAO,QAEXsG,MAAO,2CAGPyF,GAAWC,KAAXD,OA0nBOE,G,YAtnBX,WAAYtJ,GAAQ,IAAD,uBACf,4CAAMA,KAqDVuJ,UAAY,GAtDO,EAwDnBC,aAAe,SAAAnF,GACXpF,QAAQC,IAAI,mBAAqBkI,KAAKC,UAAUhD,IAC5C,EAAKrE,MAAMyJ,SAAS9H,WAAWqF,OAAS3C,EAAMwC,SAC9C,EAAKlK,SAAS,CACV+M,WAAYrF,EAAMlF,KAClB0I,UAAU,EACV8B,cAAetF,EAAMuF,IACrBpB,YAAY,KAGW,IAA5B,EAAKjM,MAAMoN,eACVvJ,KAAK,CACDrC,MAAO,aACPsC,KAAM,+CACNC,KAAM,QACNC,OAAQ,QAvED,EA6EnBsJ,cAAgB,SAAAxF,GACZ,GAAG,EAAKrE,MAAMyJ,SAAS9H,WAAWqF,OAAS3C,EAAMwC,QAAQ,CACrD,IAAIiD,EAAa,CACbC,EAAG1F,EAAMiC,KACT0D,EAAG3F,EAAM4F,MAEb,EAAKV,UAAU1G,KAAKiH,GAChB,EAAKP,UAAUW,OAAS,IAAI,EAAKX,UAAUY,QAC/C,EAAKxN,SAAS,CACVyN,cAAe,EAAKb,cAtFb,EA6GnBc,qBAAuB,WACnB,EAAKC,OAAOC,SA9GG,EAiHnBC,kBAAoB,SAAAnG,GAChB,EAAK1H,SAAS,CACV8N,YAAY,eACL,EAAKlO,MAAMkO,YADP,CAEPC,UAAWrG,OArHJ,EA0HnBsG,mBAAqB,SAAAtG,GACjB,EAAK1H,SAAS,CACV8N,YAAY,eACL,EAAKlO,MAAMkO,YADP,CAEPG,WAAYvG,OA9HL,EAmInBwG,kBAAoB,SAAAxG,GAChB,EAAK1H,SAAS,CACV8N,YAAY,eACL,EAAKlO,MAAMkO,YADP,CAEPK,UAAWzG,OAvIJ,EAqSnB0G,QAAU,SAACC,EAAQC,GAAT,OAAgB,IAAI3G,SAAQ,SAAA4G,GAClC,IAAIC,EAASH,EAAOI,MAAM,IACtBC,EAAY,EAAK9O,MAAMmN,WAC3B2B,EAAUC,SAAQ,SAACC,EAAKC,GACpBD,EAAIxD,OAAS0D,QAAQC,OAAOP,EAAOK,QAEvC,EAAK7O,SAAS,CACV+M,WAAY2B,EACZxD,UAAU,IAEd,EAAKyC,OAAOqB,KAAK,sBAAuB,CAAE9E,QAAS,EAAK7G,MAAMyJ,SAAS9H,WAAWqF,KAAM4C,IAAK,EAAGzK,KAAM,EAAK5C,MAAMmN,aAEjHzK,QAAQC,IAAI,WACZ0M,WAAWV,EAAGD,OAlTC,EAsTnBY,aAtTmB,uCAsTJ,WAAOC,EAAOC,GAAd,eAAAC,EAAA,sDACFC,EAAQ,EADN,YACSA,EAAQH,EAAM5B,QADvB,oBAE2B,IAA9B,EAAK3N,MAAMoN,cAFR,kEAMDoC,EAASD,EAAMG,GAAQA,EAAOH,GAN7B,OAC+BG,IAD/B,0DAtTI,0DAiUnBC,MAjUmB,uCAiUX,WAAOC,GAAP,SAAAH,EAAA,sEACE,EAAKH,aAAaM,EAAlB,uCAAuB,WAAOC,GAAP,SAAAJ,EAAA,sEACnB,EAAKjB,QAAQqB,EAAQxC,IAAKwC,EAAQ9F,MADf,2CAAvB,kCAAAzJ,KAAA,gBADF,uBAIE,EAAKwP,yBAJP,WAK8B,IAA9B,EAAK9P,MAAMoN,cALX,gCAMM,EAAKW,OAAOqB,KAAK,+BAAgC,CAAE9E,QAAS,EAAK7G,MAAMyJ,SAAS9H,WAAWqF,KAAM4C,IAAK,EAAGzK,KAAM,EAAK5C,MAAMmN,aANhI,2CAjUW,wDA6WnB4C,eAAiB,SAAAjI,GACb,EAAK1H,SAAS,CACV8N,YAAY,eACL,EAAKlO,MAAMkO,YADP,CAEP8B,cAAelI,OAjXR,EAsXnBmI,qBAAuB,SAAAnI,GACnB,IAAIiC,EAAO,EAAK/J,MAAMkQ,WAAWpI,GAAOiD,UACpCJ,EAAS,EAAK3K,MAAMkQ,WAAWpI,GAAO6C,OACtCxD,EAAO,EAAKnH,MAAMkQ,WAAWpI,GAAOX,KACxCzE,QAAQC,IAAIgI,GACZ,EAAKvK,SAAS,CACV+P,WAAYpG,EACZqG,YAAY,EACZC,cAAe1F,EACf2F,oBAAqBnJ,KA/XV,EAoYnBgF,aAAe,SAAC1H,EAAI4I,GAChB,EAAKjN,UAAS,SAAAmQ,GACV,IAAMC,EAAQ,aAAOD,EAASpD,YAG9B,OAFSqD,EAAS/L,EAAK,GAAG+G,QAAtB6B,EAEG,CAAEF,WAAYqD,MAEzB,EAAKpQ,SAAS,CACVkL,UAAU,KA1Yd,EAAKmF,aAAe1K,IAAMC,YAFX,OAIf,EAAKhG,MAAQ,CACToQ,YAAY,EACZM,gBAAiB,GACjBC,iBAAkB,GAClBR,WAAY,EACZ7E,UAAU,EACVW,YAAY,EACZ2E,gBAAgB,EAChBxD,cAAe,EACfyD,UAAU,EACVC,aAAc,EACdT,cAAe,GACfU,QAAQ,GACRT,oBAAqB,GACrBzC,cAAe,GACfK,YAAa,CACTC,UAAW,IACXE,WAAY,IACZE,UAAW,IACXyB,cAAe,UAEnBgB,YAAa,CACT,CACIvM,GAAI,EACJqD,MAAO,UACR,CACCrD,GAAI,EACJqD,MAAO,UACR,CACCrD,GAAI,EACJqD,MAAO,cACR,CACCrD,GAAI,EACJqD,MAAO,YAGfmJ,cAAe,GACff,WAAY,GACZ/C,WAAY,IAShB,EAAKY,OAASmD,KAhDG,sBAHF,E,8MA8Ff5Q,KAAKyN,OAAOoD,GAAG,kBAAmB7Q,KAAK2M,cACvC3M,KAAKyN,OAAOoD,GAAG,mBAAoB7Q,KAAKgN,e,SAEjBrC,K,cAAnBmG,E,gBH7GiBC,EG8GgB/Q,KAAKmD,MAAMyJ,SAAS9H,WAAWqF,KH7GjE1I,IACFC,KAAK,4BAA4B,CAC9ByI,KAAM4G,IAET7O,MAAK,SAAAC,GACF,OAAOA,EAASG,QACjBM,OAAM,SAAAC,GACL,OAAOA,K,OGsGPgK,E,OACAvK,EAAOuK,EAAWA,WAClBE,EAAMF,EAAWC,cACrB9M,KAAKF,SAAS,CACV8P,WAAYkB,EACZjE,WAAYvK,EACZwK,cAAeC,I,kCHpHE,IAAAgE,I,gOG2JrB/Q,KAAKyN,OAAOqB,KAAK,sBAAuB,CAAE9E,QAAShK,KAAKmD,MAAMyJ,SAAS9H,WAAWqF,KAAM4C,IAAK,EAAGzK,KAAMtC,KAAKN,MAAMmN,aAE7GO,EAAO,G,SACLpN,KAAKN,MAAMmN,WAAW4B,SAAQ,SAAAuC,GAChC5D,GAAcyB,OAAOmC,EAAE9F,W,OAGvB+F,GAAW,IAAIC,MAAOC,UACtBC,EAAY,IAAIF,KAAKD,GAAUI,YAEP,IAAxBrR,KAAKN,MAAM6Q,UACPe,EAAM,CAAE7H,KAAM,EAAGsD,IAAKK,GAC1BpN,KAAKF,SAAS,CACVyQ,UAAU,EACVC,aAAcU,KAAKK,MACnBnB,gBAAiBgB,EACjBzF,YAAY,IAEhB3L,KAAKF,UAAS,SAAA0R,GAAS,MAAK,CACxBb,cAAc,GAAD,oBAAMa,EAAUb,eAAhB,CAA+BW,QAEhDtR,KAAKyR,mCAGDC,EAASR,KAAKK,MAAQvR,KAAKN,MAAM8Q,aACjCc,EAAM,CAAE7H,KAAMiI,EAAQ3E,IAAKK,GAC/BpN,KAAKF,UAAS,SAAA0R,GAAS,MAAK,CACxBb,cAAc,GAAD,oBAAMa,EAAUb,eAAhB,CAA+BW,IAC5Cd,aAAcU,KAAKK,MACnB5F,YAAY,OAGpBvJ,QAAQC,IAAIrC,KAAKN,MAAMiR,e,4QAKnBvD,GAAO,IAAI8D,MAAOC,UAClBtB,EAAa,IAAIqB,KAAK9D,GAAMiE,WAChCrR,KAAKF,SAAS,CACVkL,UAAU,EACVuF,UAAU,EACVF,iBAAkBR,EAClBlE,YAAY,I,SAIV3L,KAAKF,UAAS,SAAAmQ,GAChB,IAAIC,EAAQ,aAAOD,EAASpD,YAE5B,OADAqD,EAASzB,SAAQ,SAAAuC,GAAOA,EAAE9F,QAAS,KAC5B,CAAE2B,WAAYqD,M,cAGzBlQ,KAAKyN,OAAOqB,KAAK,sBAAuB,CAAE9E,QAAShK,KAAKmD,MAAMyJ,SAAS9H,WAAWqF,KAAM4C,IAAK,EAAGzK,KAAMtC,KAAKN,MAAMmN,aAE7G6E,EAASR,KAAKK,MAAQvR,KAAKN,MAAM8Q,aACjCc,EAAM,CAAE7H,KAAMiI,EAAQ3E,IAAK,Q,UACzB/M,KAAKF,UAAS,SAAA0R,GAAS,MAAK,CAC9Bb,cAAc,GAAD,oBAAMa,EAAUb,eAAhB,CAA+BW,Q,QAIhD,IADI7G,EAAY,EACPkH,EAAI,EAAGA,EAAI3R,KAAKN,MAAMiR,cAActD,OAAQsE,IACjDlH,GAAwBzK,KAAKN,MAAMiR,cAAcgB,GAAGlI,K,OAGpDmI,EAAYrH,KAAKC,UAAUxK,KAAKN,MAAMiR,eACtCkB,EAAsB,CAAEhL,KAAM7G,KAAKN,MAAMsQ,oBAAqB3F,OAAQuH,EAAWnH,UAAWA,GAE5FqH,EAAkB,CAAEjL,KAAM7G,KAAKN,MAAMsQ,oBAAqB3F,OAAQrK,KAAKN,MAAMiR,cAAelG,UAAWA,EAAWC,UAAWjI,aAAauB,QAAQ,c,UAGhJhE,KAAKF,UAAS,SAAA0R,GAAS,MAAK,CAC9B5B,WAAW,GAAD,oBAAM4B,EAAU5B,YAAhB,CAA4BiC,Q,QAI1CzH,GAAU0H,GAAiB5P,MAAK,SAAAmB,GAC5BjB,QAAQC,IAAIgB,MACbT,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,MAIhB7C,KAAKwP,yBAELxP,KAAKF,SAAS,CACV6Q,cAAe,K,uJH1FU,SAAA7F,GACjC,OAAOrJ,IACFC,KAAK,6BAA6B,CAC/ByC,GAAI2G,EAAM3G,GACVsF,KAAMqB,EAAMrB,OAEfvH,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MG8GXkP,CALc,CACV5N,GAAInE,KAAKN,MAAM+Q,QACfhH,KAAKzJ,KAAKN,MAAM2Q,iBAAiB2B,MAAM,EAAG,MAGjB9P,MAAK,SAAAmB,GAC9BjB,QAAQC,IAAIgB,MACbT,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,MAEhB7C,KAAKyN,OAAOqB,KAAK,2BAA2B,CAAC9E,QAAQhK,KAAKmD,MAAMyJ,SAAS9H,WAAWqF,KAAKsG,QAAQzQ,KAAKN,MAAM+Q,Y,uDAG9E,IAAD,QH3Nb,SAAA3F,GACpB,OAAOrJ,IACFC,KAAK,oBAAoB,CACtBuQ,WAAYnH,EAAMmH,WAClBC,aAAcpH,EAAMoH,aACpB/H,KAAKW,EAAMX,KACXgI,KAAMrH,EAAMqH,KACZzB,YAAY5F,EAAM4F,YAClBU,UAAUtG,EAAMsG,UAChBvB,WAAW/E,EAAM+E,WACjBxF,OAAOS,EAAMT,SAEhBnI,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MGsNXuP,CAXc,CACVH,WAAYxP,aAAauB,QAAQ,aACjCkO,aAAclS,KAAKmD,MAAMyJ,SAAS9H,WAAW+B,KAC7CsD,KAAMnK,KAAKmD,MAAMyJ,SAAS9H,WAAWqF,KACrCgI,KAAMnS,KAAKN,MAAMkO,YAAYK,UAC7B5D,OAAQrK,KAAKN,MAAMsQ,oBACnBU,YAAa1Q,KAAKN,MAAMkO,YAAY8B,cACpC0B,UAAWpR,KAAKN,MAAM0Q,gBAAgB4B,MAAM,EAAG,MAInC9P,MAAK,SAAAmB,GACjBjB,QAAQC,IAAIgB,GACZ,EAAKvD,SAAS,CACV2Q,QAAQpN,EAAIc,KAEhB,EAAKsJ,OAAOqB,KAAK,kBAAkB,CAAC9E,QAAQ,EAAK7G,MAAMyJ,SAAS9H,WAAWqF,KAAKsG,QAAQpN,EAAIc,QAC7FvB,OAAM,SAAAC,GACLT,QAAQC,IAAIQ,Q,yKA6CZ7C,KAAKN,MAAMqQ,c,wBACP3C,GAAO,IAAI8D,MAAOC,UAClBkB,EAAajF,EAAOpN,KAAKN,MAAMmQ,WAC/BuB,EAAY,IAAIF,KAAK9D,GAAMiE,WAC3BxB,EAAa,IAAIqB,KAAKmB,GAAYhB,W,SAChCrR,KAAKF,SAAS,CAChBgQ,YAAY,EACZM,gBAAiBgB,EACjBf,iBAAkBR,I,OAItB,IAFA7P,KAAKyR,iCACDa,EAAK/H,KAAKgI,MAAMvS,KAAKN,MAAMqQ,eACtBX,EAAQ,EAAGA,EAAQkD,EAAGjF,OAAQ+B,IAC/BA,IAAUkD,EAAGjF,OAAS,EACtBiF,EAAGlD,GAAO3F,KAAO6I,EAAGlD,EAAQ,GAAG3F,KAC1B6I,EAAGlD,GAAO3F,KAAO,EAE9BrH,QAAQC,IAAIrC,KAAKN,MAAMqQ,eACvB/P,KAAKqP,MAAMiD,G,wBAGX/O,KAAK,CACDrC,MAAO,cACPsC,KAAM,mDACNC,KAAM,UACNC,OAAQ,O,gJA2ChB,IAA8B,IAA1B1D,KAAKN,MAAMoQ,WACX,OAAO,6BACH,wBAAI5P,MAAO,CAAEuG,SAAU,SAAvB,0CAAqDzG,KAAKN,MAAM0Q,gBAAgB4B,MAAM,GAAI,KAC1F,wBAAI9R,MAAO,CAAEuG,SAAU,SAAvB,sDAA8DzG,KAAKN,MAAM2Q,iBAAiB2B,MAAM,GAAI,Q,qCAM5G,IAAIvI,EAAO,IAAIyH,KAAKlR,KAAKN,MAAMmQ,YAAY2C,cAAcR,MAAM,GAAI,IACnE,OAAO,wBAAI9R,MAAO,CAAEuG,SAAU,SAAvB,uCAAkDgD,K,2CAGvC,IAAD,OACjB,OAAO,yBAAKvJ,MAAO,CAAEqE,OAAQ,OAAQiC,WAAY,QAASgF,aAAc,QACpE,yBAAKtL,MAAO,CAAEoJ,QAAS,SACnB,yBAAKpJ,MAAO,CAAEuG,SAAU,OAAQrG,UAAW,SAAUgI,MAAO,QAAUpI,KAAKmD,MAAMyJ,SAAS9H,WAAW+B,MACrG,yBAAK3G,MAAO,CAAEkI,MAAO,MAAO7D,OAAQ,QAAUS,QAAS,kBAAM,EAAKyN,wBAC9D,kBAACC,GAAA,EAAD,CAAiBvO,GAAG,aAAajE,MAAO,CAAEuG,SAAU,OAAQkM,OAAQ,oBAAqBvK,MAAO,OAAQoD,aAAc,OAAQH,gBAAiB,eAGvJ,yBAAKnL,MAAO,CAAEqE,OAAQ,OAAQiC,WAAY,QAAShC,QAAS,WAAYgH,aAAc,QAEtF,wBAAItL,MAAO,CAAEuG,SAAU,SAAvB,oFACA,kBAAC,KAAD,CAAQmM,MAAOzG,GAAW0G,aAAc,IAAK9I,IAAK,IAAK+I,IAAK,EAAGC,SAAU/S,KAAKgO,oBAC9E,kBAAC,KAAD,CAAQ6E,aAAa,SAAS3S,MAAO,CAAEkI,MAAO,IAAK7D,OAAQ,WAAWkC,SAAU,QAAUsM,SAAU/S,KAAKyP,gBACpGzP,KAAKN,MAAMgR,YAAYxM,KAAI,SAACL,GAAD,OACxB,kBAAC0I,GAAD,CAAQrM,MAAO,CAAE8S,OAAQ,QAAUlS,IAAK+C,EAAKM,GAAIqD,MAAO3D,EAAK2D,OAAQ3D,EAAK2D,YAIlF,yBAAKtH,MAAO,CAAEmL,gBAAiB,UAAW2H,OAAQ,UAClD,yBAAK9S,MAAO,CAAE+S,WAAY,SACtB,yBAAK/S,MAAO,CAAEoJ,QAAS,OAAOjJ,WAAW,SACrC,yBAAKH,MAAO,CAAEkI,MAAO,QACjB,wBAAIlI,MAAO,CAAEuG,SAAU,SAAvB,oEAEZ,0BAAMvG,MAAO,CAAEgT,cAAe,cAA9B,QAAqDlT,KAAKN,MAAMsQ,uBAGxD,yBAAK9P,MAAO,CAAEkI,MAAO,MAAOhI,UAAW,WACnC,kBAAC,IAAD,CAAQ+D,GAAG,UAAUgP,MAAM,SAASjT,MAAO,CAAEuG,SAAU,OAAQuM,OAAQ,OAAQ5K,MAAO,OAAQ2D,WAAY,OAAO4G,OAAQ,oBAAqBtH,gBAAiB,WAAarG,QAAS,kBAAM,EAAKoO,SAAhM,SAIJ,yBAAKlT,MAAO,CAAEkI,MAAO,MAAO3B,SAAU,SAClC,kBAAC,IAAD,CAAQtC,GAAG,YAAYjE,MAAO,CAACsL,aAAa,MAAO/E,SAAU,OAAQuM,OAAQ,OAAQ5K,MAAO,QAAS2D,WAAY,OAAO4G,OAAQ,oBAAqBtH,gBAAiB,WAAarG,QAAS,kBAAM,EAAKqO,WAAvM,aAQZ,yBAAKnT,MAAO,CAAEoJ,QAAS,OAAQgK,SAAU,SACpCtT,KAAKN,MAAMmN,WAAW3I,KAAI,SAACL,GAAD,OACvB,yBAAK/C,IAAK+C,EAAKM,GAAIjE,MAAO,CAAEkI,MAAO,QAC/B,kBAAC,GAAD,CAAQuD,WAAY,EAAKjM,MAAMiM,WAAYX,SAAU,EAAKtL,MAAMsL,SAAUE,OAAQrH,EAAKqH,OAAQ/G,GAAIN,EAAKM,GAAI0H,aAAc,EAAKA,aAAa0H,KAAK,IAAQ1P,EAAK3C,e,2CAQ5J,IAAD,OACjB,OAAO,yBAAKhB,MAAO,CAAEqE,OAAQ,OAAQiC,WAAY,QAASgF,aAAc,QACpE,yBAAKtL,MAAO,CAAEoJ,QAAS,SACnB,yBAAKpJ,MAAO,CAAEuG,SAAU,OAAQrG,UAAW,SAAUgI,MAAO,QAAUpI,KAAKmD,MAAMyJ,SAAS9H,WAAW+B,MACrG,yBAAK3G,MAAO,CAAEkI,MAAO,MAAO7D,OAAQ,QAAUS,QAAS,kBAAM,EAAKwO,wBAC9D,kBAACd,GAAA,EAAD,CAAiBvO,GAAG,aAAajE,MAAO,CAAEuG,SAAU,OAAQkM,OAAQ,oBAAqBvK,MAAO,OAAQoD,aAAc,OAAQH,gBAAiB,eAGvJ,yBAAKnL,MAAO,CAAEqE,OAAQ,OAAQiC,WAAY,QAAShC,QAAS,WAAYgH,aAAc,QAElF,wBAAItL,MAAO,CAAEuG,SAAU,SAAvB,oFAGA,kBAAC,KAAD,CAAQmM,MAAOzG,GAAW0G,aAAc,IAAK9I,IAAK,IAAK+I,IAAK,EAAGC,SAAU/S,KAAKgO,oBAC9E,kBAAC,KAAD,CAAQ6E,aAAa,SAAS3S,MAAO,CAAEkI,MAAO,QAAS7D,OAAQ,WAAYkC,SAAU,QAAUsM,SAAU/S,KAAKyP,gBACzGzP,KAAKN,MAAMgR,YAAYxM,KAAI,SAACL,GAAD,OACxB,kBAAC0I,GAAD,CAAQrM,MAAO,CAAE8S,OAAQ,QAAUlS,IAAK+C,EAAKM,GAAIqD,MAAO3D,EAAK2D,OAAQ3D,EAAK2D,YAItF,yBAAKtH,MAAO,CAAEsE,QAAS,WAAYD,OAAQ,SACvC,yBAAKrE,MAAO,CAAEoJ,QAAS,SACnB,yBAAKpJ,MAAO,CAAEkI,MAAO,SAGrB,yBAAKlI,MAAO,CAAEkI,MAAO,SAGrB,yBAAKlI,MAAO,CAAEkI,MAAO,UAKzB,yBAAKlI,MAAO,CAAEoJ,QAAS,SACnB,yBAAKpJ,MAAO,CAAEkI,MAAO,QACjB,wBAAIlI,MAAO,CAAEuG,SAAU,SAAvB,yCACA,kBAAC,KAAD,CAAQoM,aAAa,sCAAoB3S,MAAO,CAAEkI,MAAO,IAAK7D,OAAQ,WAAYkC,SAAU,QAAUsM,SAAU/S,KAAK2P,sBAChH3P,KAAKN,MAAMkQ,WAAW1L,KAAI,SAACL,EAAM8K,GAAP,OACvB,kBAACpC,GAAD,CAAQzL,IAAK+C,EAAKgD,KAAMkJ,cAAelM,EAAKwG,OAAQ7C,MAAOmH,GAAM9K,EAAKgD,WASlF,yBAAK3G,MAAO,CAAEkI,MAAO,MAAO3B,SAAU,SACjCzG,KAAKyT,eACLzT,KAAK0T,sBAKlB,yBAAKxT,MAAO,CAAEmL,gBAAiB,UAAW2H,OAAQ,UAClD,yBAAK9S,MAAO,CAAEE,UAAW,SAAUmE,OAAQ,OAAQiC,WAAY,QAASgF,aAAc,QAClF,wBAAItL,MAAO,CAAEuG,SAAU,SAAvB,uCACA,kBAAC,IAAD,CAAQtC,GAAG,WAAWgP,MAAM,SAASjT,MAAO,CAAEuG,SAAU,OAAQuM,OAAQ,OAAQ5K,MAAO,OAAQ2D,WAAY,OAAQ4G,OAAQ,oBAAqBtH,gBAAiB,WAAarG,QAAS,kBAAM,EAAK2O,uBAAlM,SAGA,yBAAKzT,MAAO,CAAEoJ,QAAS,OAAQgK,SAAU,OAAQ9O,QAAS,cACrDxE,KAAKN,MAAMmN,WAAW3I,KAAI,SAACL,GAAD,OACvB,yBAAK/C,IAAK+C,EAAKM,GAAIjE,MAAO,CAAEkI,MAAO,QAC/B,kBAAC,GAAD,CAAY4C,SAAU,EAAKtL,MAAMsL,SAAUE,OAAQrH,EAAKqH,OAAQ/G,GAAIN,EAAKM,GAAI0H,aAAc,EAAKA,aAAa0H,KAAK,IAAQ1P,EAAK3C,gB,4CAQhI,IAAD,OACe,IAA7BlB,KAAKN,MAAMoN,cACXvJ,KAAK,CACDrC,MAAO,cACPsC,KAAM,kHACNC,KAAM,UACNC,OAAQ,OAGZH,KAAK,+CAAyB,CAC1BqQ,QAAS,QACTnQ,KAAM,SAELvB,MAAK,SAACsF,GACW,KAAVA,GAGJ,EAAK1H,SAAS,CACVwQ,gBAAgB,EAChBN,oBAAqBxI,S,4CAOJ,IAA7BxH,KAAKN,MAAMoN,cACXvJ,KAAK,CACDrC,MAAO,cACPsC,KAAM,kHACNC,KAAM,UACNC,OAAQ,OAGZ1D,KAAKF,SAAS,CACVwQ,gBAAgB,M,mCAMxB,OAAkC,IAA9BtQ,KAAKN,MAAM4Q,eACJtQ,KAAK6T,qBAEL7T,KAAK8T,uB,+BAMhB,OACI,6BACI,kBAAC,KAAD,CAAK5T,MAAO,CAAEqE,OAAQ,SAClB,kBAAC,KAAD,CAAKY,KAAM,IACP,yBAAKjF,MAAO,CAAEC,UAAW,QAASoE,OAAQ,OAAQiC,WAAY,QAASgF,aAAc,QACjF,kBAAC,KAAD,CAAKtL,MAAO,CAAEG,WAAY,SACtB,kBAAC,GAAD,CAAciC,KAAMtC,KAAKN,MAAM6N,iBAEnC,kBAAC,KAAD,CAAKrN,MAAO,CAAEG,WAAY,SACtB,kBAAC0T,GAAD,CAAiBzR,KAAMtC,KAAKN,MAAM6N,mBAK9C,kBAAC,KAAD,CAAKpI,KAAM,IACNnF,KAAKgU,oB,GA5lBR1S,aCXP2S,I,OA/BQ,SAAC,GAAoC,IAAxB3S,EAAuB,EAAlC4S,UAAyB5P,EAAS,6BACvD,OACG,kBAAC,IAAD,iBACKA,EADL,CAECK,OAAU,SAAAxB,GACN,OAAIgF,GAAKgM,kBACE,kBAAC7S,EAAc6B,IAEtBI,IAAK,CACDrC,MAAO,YACPsC,KAAM,kGACNC,KAAM,QACNC,OAAQ,OAIR,kBAAC,IAAD,CACA1C,GAAI,CACA6D,SAAS,IACTnF,MAAM,CACF0U,KAAMjR,EAAMyJ,oB,qBCpBlC3H,GAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,GAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KA4KpBkP,G,YAxKX,WAAYlR,GAAQ,IAAD,8BACf,4CAAMA,KA0BVqC,QAAUC,IAAMC,YA3BG,EA4BnBC,SAAW,SAAAC,GAEP,IZyBkBpD,EYzBZyB,EAAM,eACL2B,IZwBWpD,EYrBP,CAAC2B,GAAI,EAAKzE,MAAMyE,GAAGxC,WAAYsC,EAAOtC,WAAYC,UAAWqC,EAAOrC,UAAWC,MAAOoC,EAAOpC,MAAOE,IAAK,EAAKrC,MAAMqC,IAAIE,MAAOgC,EAAOhC,MAAOD,KAAMiC,EAAOjC,MZsBlKP,IACFC,KAAK,qBAAqB,CACvByC,GAAI3B,EAAK2B,GACTxC,WAAYa,EAAKb,WACjBC,UAAWY,EAAKZ,UAChBC,MAAOW,EAAKX,MACZE,IAAKS,EAAKT,IACVE,MAAOO,EAAKP,MACZD,KAAMQ,EAAKR,OAEdE,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MYrCiKX,MAAK,SAAAmB,GACpK,UAANA,EACCE,IAAK,CACDrC,MAAO,YACPsC,KAAK,GAAD,OAAKH,GACTI,KAAM,UACNC,OAAQ,OAIZH,IAAK,CACDrC,MAAO,cACPsC,KAAK,mEACLC,KAAM,QACNC,OAAQ,UAIpBtB,QAAQC,IAAI4B,IApDG,EAuDnBgC,QAAU,WACN,EAAKT,QAAQU,QAAQC,eAxDN,EA2DnBC,OAAS,WACL,EAAKZ,QAAQU,QAAQG,eAAe,CAChCxE,MAAO,eACPF,WAAY,UA5DhB,EAAKjC,MAAM,CACPqC,IAAI,aACJoC,GAAI,MAJO,E,iNZuCOtC,EY7BY,CAACA,MAAM7B,KAAKmD,MAAMyJ,SAAS9H,WAAWjD,OZ8B5EO,QAAQC,IAAI,cAAekI,KAAKC,UAAU3I,IACnCJ,IACFC,KAAK,iBAAiB,CAACG,MAAOA,GAAO,CAClCkC,QAAQ,CACJ,cAAkBtB,aAAauB,QAAQ,gBAG9C9B,MAAK,SAAAC,GACF,OAAOA,EAASG,QAEnBM,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,M,QYzCVL,E,UAEFxC,KAAKwF,QAAQU,QAAQG,eAAe,CAChCxE,MAAOW,EAAKX,MACZI,MAAOO,EAAKP,MACZD,KAAMQ,EAAKR,KACXL,WAAYa,EAAKb,WACjBC,UAAWY,EAAKZ,YAEpB5B,KAAKF,SAAS,CACViC,IAAKS,EAAKT,IACVoC,GAAI3B,EAAK2B,M,iCZkBK,IAAAtC,I,iGY8BtB,OACI,yBAAK3B,MAAO,CAACqE,OAAO,OAAQiC,WAAW,UACnC,wBAAItG,MAAO,CAACqE,OAAO,OAAOkC,SAAS,SAAnC,kCACA,yBAAKvG,MAAO,CAACwG,YAAY,QAAQC,cAAc,SAC3C,kBAAC,IAAD,iBAAU1B,GAAV,CAAkB2B,IAAK5G,KAAKwF,QAASqB,KAAK,cAAclB,SAAU3F,KAAK2F,WACnE,kBAAC,IAAK9E,KAAN,CAAWgG,KAAK,QAAQC,MAAM,QAAQC,MAAO,CACD,CAAEnC,KAAM,QAAQoC,QAAS,mCACzB,CAAEC,UAAU,EAAKD,QAAS,yBAElE,kBAAC,IAAD,OAwCJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,OAAOC,MAAM,sBAAYC,MAAO,CAAC,CAAEE,UAAU,KACzD,kBAAC,IAAMW,MAAP,KACA,kBAAC,IAAD,CAAOJ,MAAM,UAAb,mBACA,kBAAC,IAAD,CAAOA,MAAM,WAAb,sBAIJ,kBAAC,IAAK3G,KAAN,CAAWgG,KAAK,aAAaC,MAAM,8BAAYC,MAAO,CAAC,CAAEE,UAAU,EAC3DD,QAAS,8DACb,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,YAAYC,MAAM,SAAMC,MAAO,CAAC,CAAEE,UAAU,EACpDD,QAAS,kCACb,kBAAC,IAAD,OAMJ,kBAAC,IAAKnG,KAAN,CAAWiG,MAAM,gBACb,kBAAC,IAAD,CAAYU,MAAO8M,KAAO,GAAD,OAAItU,KAAKN,MAAMqC,KAAM,cAAgB+D,OAAQ,aAAc4F,UAAQ,KAGhG,kBAAC,IAAK7K,KAAN,CAAWgG,KAAK,QAAQC,MAAM,oCAAgBC,MAAO,CAAC,CAAEE,UAAU,EAC1DD,QAAS,6DACb,kBAAC,IAAD,OAGJ,kBAAC,IAAKnG,KAASwE,GACX,kBAAC,IAAD,CAAQT,KAAK,UAAUkD,SAAS,UAAhC,UAGA,kBAAC,IAAD,CAAQA,SAAS,SAAS9C,QAAShF,KAAKiG,SAAxC,SAGA,kBAAC,IAAD,CAAQrB,KAAK,OAAOkD,SAAS,SAAS9C,QAAShF,KAAKoG,QAApD,qB,GA3JL9E,aCJf2B,I,OAAY3D,IAAZ2D,SA8KOsR,G,YA3KX,WAAYpR,GAAQ,IAAD,uBACf,4CAAMA,KAkBVwJ,aAAe,SAAAnF,GACXpF,QAAQC,IAAI,mBAAmBkI,KAAKC,UAAUhD,IAC9C,IAAIvD,EAASuD,EAAMtD,KAAI,gBAAOpD,EAAP,EAAGqD,GAAYG,EAAf,0CAA6BxD,OAAQwD,MAC5D,EAAKxE,SAAS,CACVwC,KAAM2B,KAvBK,EAqCnBuJ,qBAAuB,WACnB,EAAKC,OAAOC,SAtCG,EA0CnB8G,mBAAqB,SAAA1T,GACjB,IAAIwR,EAAK,EAAK5S,MAAM4C,KAAKmS,MAAK,SAAAzK,GAAO,OAAEA,EAAQlJ,MAAMA,MAE9B,IAApBwR,EAAGxF,cACFvJ,IAAK,CACDrC,MAAO,YACPsC,KAAM,oDACNC,KAAM,QACNC,OAAQ,OAGZ,EAAKP,MAAM4C,QAAQC,KAAK,CACpBnB,SAAS,gBAAgB,EAAK6P,QAAQpC,EAAGzL,MACzC/B,WAAW,CAAC+B,KAAK,GAAD,OAAIyL,EAAGzL,MAAOsD,KAAK,GAAD,OAAImI,EAAGnI,UAvDlC,EA6DnBwK,cAAgB,SAAA7T,GNYS,IAAAkJ,KMXP,CAAC7F,GAAGrD,GNYfW,IACFC,KAAK,2BAA2B,CAC7ByC,GAAI6F,EAAQ7F,KAEfjC,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MMrBaX,MAAK,SAAAmB,GAEzB,GADAjB,QAAQC,IAAIvB,GACTuC,EAAIC,MACHC,IAAK,CACDrC,MAAO,YACPsC,KAAM,oCACNC,KAAM,QACNC,OAAQ,WAEX,CAED,IAAIC,EAAW,EAAKjE,MAAM4C,KAAKsB,QAAO,SAAAC,GAAI,OAAIA,EAAK/C,MAAQA,KAC3DsB,QAAQC,IAAIsB,GACZ,EAAK7D,SAAS,CACVwC,KAAMqB,IAEVJ,IAAK,CACDrC,MAAO,aACPsC,KAAM,2BACNC,KAAM,UACNC,OAAQ,YAlFL,EA0GnBgR,QAAU,SAACE,GA0BH,OAHAA,GAHAA,GAHAA,GAHAA,GAHAA,GADAA,GADAA,GADAA,GADAA,GADAA,GADAA,GAHAA,EAAMA,EAAIC,eAGAC,QAAQ,oHAAwC,MAChDA,QAAQ,4EAA4B,MACpCA,QAAQ,oCAAgB,MACxBA,QAAQ,oHAAwC,MAChDA,QAAQ,8EAA4B,MACpCA,QAAQ,sCAAgB,MACxBA,QAAQ,YAAQ,MAGhBA,QAAQ,kBAAmB,KAG3BA,QAAQ,SAAU,MAGlBA,QAAQ,OAAQ,KAGhBA,QAAQ,OAAQ,KAjIf,OAGf,EAAKpV,MAAQ,CACT4C,KAAK,IAYT,EAAKmL,OAASmD,KAdG,sBAFF,E,0MA4Bf5Q,KAAKyN,OAAOoD,GAAG,+BAA+B7Q,KAAK2M,c,SNlChDlL,IACFqC,IAAI,6BAA6B,CAC9BC,QAAQ,CACJ,cAAkBtB,aAAauB,QAAQ,gBAG9C9B,MAAK,SAAAC,GACF,OAAOA,EAASG,QAEnBM,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,M,OMyBVV,E,OAEF8B,EADS9B,EACO+B,KAAI,gBAAOpD,EAAP,EAAGqD,GAAYG,EAAf,0CAA6BxD,OAAQwD,MAC7DtE,KAAKF,SAAS,CACVwC,KAAM2B,I,uIAwDV,OAAO,kBAAC,IAAD,CAAQkH,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,MAAmBlL,MAAO,CAAEmL,gBAAiB,e,kCAI7E,OAAQ,kBAAC,IAAD,CAAQF,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,U,oCAIjC,OAAQ,kBAAC,IAAD,CAAQD,KAAM,IAAK1H,KAAM,kBAAC2H,GAAA,EAAD,MAAmBlL,MAAO,CAAEmL,gBAAiB,e,wCAGhEH,GACd,OAAc,IAAXA,EAAqBlL,KAAKsL,WACZ,IAATJ,EAAmBlL,KAAK+U,cACpB/U,KAAKuL,c,+BAgCX,IAAD,OACL,OACI,kBAAC,GAAD,KACI,kBAAC,IAAD,CAAYrL,MAAO,CAAEqE,OAAQ,WACzB,kBAAC,IAAW1D,KAAZ,MACA,kBAAC,IAAWA,KAAZ,OAEJ,yBAAKZ,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,GAAIrE,UAAW,IAAKmJ,QAAS,OAAOgK,SAAU,OAAO/O,OAAO,OAAOiH,aAAa,QACrIxL,KAAKN,MAAM4C,KAAK4B,KAAI,SAACL,GAAD,OACjB,yBAAK/C,IAAK+C,EAAK/C,IAAIuQ,WAAanR,MAAO,CAACmL,gBAAiB,UAAWjD,MAAM,MAAO7D,OAAO,OAAQnE,UAAW,SAAU4U,WAAW,OAAQvO,SAAS,OAAO+E,aAAa,QACrK,yBAAKrH,GAAG,eAAejE,MAAO,CAACuG,SAAU,OAAOjG,MAAM,WAAYwE,QAAS,kBAAI,EAAKwP,mBAAmB3Q,EAAK/C,OAAO+C,EAAKgD,MACvH,EAAKoO,kBAAkBpR,EAAKiJ,eAC7B,6BAAMjJ,EAAKoG,UACX,6BACQ,kBAAC,IAAD,CAAQrF,KAAK,OAAO1E,MAAO,CAACuG,SAAU,SAClC,kBAAC,IAAD,CAAMzF,GAAI,CACN6D,SAAS,gBACTC,WAAW,CACPX,GAAG,GAAD,OAAIN,EAAK/C,QAHnB,SAOJ,kBAAC,IAAD,CAAQ8D,KAAK,OAAOG,QAAM,EAAC7E,MAAO,CAACuG,SAAU,QAASzB,QAAS,kBAAI,EAAK2P,cAAc9Q,EAAK/C,OAA3F,UAGA,kBAAC,IAAD,CAAME,GAAI,CAAC6D,SAAS,gBAAgB,EAAK6P,QAAQ7Q,EAAKgD,MAAM/B,WAAW,CAAC+B,KAAK,GAAD,OAAIhD,EAAKgD,MAAOsD,KAAK,GAAD,OAAItG,EAAKsG,SAAU,yBAAKjK,MAAO,CAACuG,SAAU,SAAvB,oB,GAlKxHnF,aCJnB2B,GAAY3D,IAAZ2D,QACAiS,GAAaC,IAAbD,SACFjQ,GAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,GAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KA2EpBiQ,G,2MAxEX5P,QAAUC,IAAMC,Y,EAChBC,SAAW,SAAAC,GACPxD,QAAQC,IAAIuD,GACZrE,GAAS,CAACsF,KAAMjB,EAAOiB,KAAKsD,KAAMvE,EAAOuE,KAAMD,YAAatE,EAAOsE,YAAYD,SAAUrE,EAAOqE,WAAW/H,MAAK,SAAAmB,GAC5GjB,QAAQC,IAAIgB,GACTA,EAAIC,MACHC,IAAK,CACDrC,MAAO,YACPsC,KAAM,8CACNC,KAAM,QACNC,OAAQ,OAGZH,IAAK,CACDrC,MAAO,aACPsC,KAAM,oCACNC,KAAM,UACNC,OAAQ,W,wEAMpB,OACI,kBAAC,GAAD,CAASxD,MAAO,CAAEqE,OAAQ,WACtB,kBAAC,IAAD,CAAYrE,MAAO,CAAEqE,OAAQ,WACzB,kBAAC,IAAW1D,KAAZ,aACA,kBAAC,IAAWA,KAAZ,cAEJ,yBAAKZ,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,GAAIrE,UAAW,MACrE,wBAAID,MAAO,CAACqE,OAAO,OAAOkC,SAAS,SAAnC,4BACA,yBAAKvG,MAAO,CAACwG,YAAY,QAAQC,cAAc,SAC/C,kBAAC,IAAD,iBAAU1B,GAAV,CAAkB2B,IAAK5G,KAAKwF,QAASqB,KAAK,cAAclB,SAAU3F,KAAK2F,WACnE,kBAAC,IAAK9E,KAAN,CAAWgG,KAAK,OAAOC,MAAM,yBAAcC,MAAO,CACN,CAAEE,UAAU,EAAKD,QAAS,0CAElE,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,OAAOC,MAAM,6BAAkBC,MAAO,CACV,CAAEE,UAAU,EAAKD,QAAS,yDAElE,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,WAAWC,MAAM,sCAAiBC,MAAO,CAAC,CAAEE,UAAU,EAC9DD,QAAS,+DACb,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,cAAcC,MAAM,gCAAgBC,MAAO,CAAC,CAAEE,UAAU,EAChED,QAAS,yCACb,kBAACkO,GAAD,CAAUG,IAAK,KAGnB,kBAAC,IAAKxU,KAASwE,GACX,kBAAC,IAAD,CAAQT,KAAK,UAAUkD,SAAS,UAAhC,UAGA,kBAAC,IAAD,CAAQA,SAAS,SAAS9C,QAAShF,KAAKiG,SAAxC,SAGA,kBAAC,IAAD,CAAQrB,KAAK,OAAOkD,SAAS,SAAS9C,QAAShF,KAAKoG,QAApD,sB,GA5DH9E,aCTjB2B,GAAY3D,IAAZ2D,QACAiS,GAAaC,IAAbD,SACFjQ,GAAS,CACXC,SAAU,CAAEC,KAAM,GAClBC,WAAY,CAAED,KAAM,KAElBE,GAAa,CACfD,WAAY,CAAEE,OAAQ,EAAGH,KAAM,KAsGpBmQ,G,YAnGX,WAAYnS,GAAQ,IAAD,8BACf,4CAAMA,KAqBVqC,QAAUC,IAAMC,YAtBG,EAwBnBC,SAAW,SAAAC,GAEP,IRwBqBoE,EQxBf/F,EAAM,eACL2B,IRuBcoE,EQpBP,CAAC7F,GAAI,EAAKzE,MAAMyE,GAAG0C,KAAM5C,EAAO4C,KAAMoD,SAAUhG,EAAOgG,SAAUC,YAAajG,EAAOiG,YAAYC,KAAKlG,EAAOkG,MRqBxH1I,IACFC,KAAK,2BAA2B,CAC7ByC,GAAI6F,EAAQ7F,GACZ8F,SAAUD,EAAQC,SAClBpD,KAAMmD,EAAQnD,KACdqD,YAAaF,EAAQE,YACrBC,KAAMH,EAAQG,OAEjBjI,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,MQlCuHX,MAAK,SAAAmB,GAC1H,UAANA,EACCE,IAAK,CACDrC,MAAO,YACPsC,KAAK,GAAD,OAAKH,GACTI,KAAM,UACNC,OAAQ,OAGZH,IAAK,CACDrC,MAAO,cACPsC,KAAK,2EACLC,KAAM,QACNC,OAAQ,UAIpBtB,QAAQC,IAAI4B,IA7CZ,EAAKvE,MAAQ,CACTyE,GAAI,MAHO,E,iNRoCUA,EQ5Be,CAACA,GAAGnE,KAAKmD,MAAMyJ,SAAS9H,WAAWX,IR6BxE1C,IACFC,KAAK,oBAAoB,CAACyC,GAAIA,GAAI,CAC/BJ,QAAQ,CACJ,cAAkBtB,aAAauB,QAAQ,gBAE9C9B,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAI,aACLF,EAASG,QACjBM,OAAM,SAAAC,GACL,OAAOA,K,OQtCLmH,E,OACN5H,QAAQC,IAAI2H,GACTA,IACChK,KAAKwF,QAAQU,QAAQG,eAAe,CAChCQ,KAAMmD,EAAQnD,KACdqD,YAAaF,EAAQE,YACrBD,SAAUD,EAAQC,WAEtBjK,KAAKF,SAAS,CACVqE,GAAI6F,EAAQ7F,M,iCRmBK,IAAAA,I,iGQezB,OACI,kBAAC,GAAD,CAASjE,MAAO,CAAEqE,OAAQ,WACtB,kBAAC,IAAD,CAAYrE,MAAO,CAAEqE,OAAQ,WACzB,kBAAC,IAAW1D,KAAZ,aACA,kBAAC,IAAWA,KAAZ,cAEJ,yBAAKZ,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,GAAIrE,UAAW,MACrE,wBAAID,MAAO,CAAEqE,OAAQ,OAAQkC,SAAU,SAAvC,oDACA,yBAAKvG,MAAO,CAAEwG,YAAa,QAASC,cAAe,SAC/C,kBAAC,IAAD,iBAAU1B,GAAV,CAAkB2B,IAAK5G,KAAKwF,QAASqB,KAAK,cAAclB,SAAU3F,KAAK2F,WACnE,kBAAC,IAAK9E,KAAN,CAAWgG,KAAK,OAAOC,MAAM,yBAAcC,MAAO,CAC9C,CAAEE,UAAU,EAAMD,QAAS,0CAE3B,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,WAAWC,MAAM,sCAAiBC,MAAO,CAAC,CACtDE,UAAU,EACVD,QAAS,+DAET,kBAAC,IAAD,OAEJ,kBAAC,IAAKnG,KAAN,CAAWgG,KAAK,cAAcC,MAAM,gCAAgBC,MAAO,CAAC,CACxDE,UAAU,EACVD,QAAS,yCAET,kBAAC,GAAD,CAAUqO,IAAK,KAGnB,kBAAC,IAAKxU,KAASwE,GACX,kBAAC,IAAD,CAAQT,KAAK,UAAUkD,SAAS,UAAhC,UAGA,kBAAC,IAAD,CAAQA,SAAS,SAAS9C,QAAShF,KAAKiG,SAAxC,SAGA,kBAAC,IAAD,CAAQrB,KAAK,OAAOkD,SAAS,SAAS9C,QAAShF,KAAKoG,QAApD,sB,GAvFN9E,aCVlB2B,I,OAAY3D,IAAZ2D,SCAAA,IDCc3B,YCDFhC,IAAZ2D,SACAH,GAAWC,IAAXD,OAgIOyS,G,YA9HX,WAAYpS,GAAQ,IAAD,8BACf,4CAAMA,KAiBVqS,WAAW,GAlBQ,EAoBnBC,eAAiB,WVkMVhU,IACFqC,IAAI,sBACJ5B,MACG,kBAAIT,IAAMqC,IAAI,iBAAiB,CAAC4R,aAAa,SAC5CxT,MAAK,SAACmB,GACH,IAAMsS,EAAU,IAAIC,KAAK,CAACvS,EAAIf,MAAM,CAACsC,KAAK,oBAC1CiR,kBAAOF,EAAQ,iBAElB/S,OAAM,SAACC,GACJT,QAAQC,IAAI,SAASQ,SAE3BD,OAAM,SAAAC,GAEJ,OADAT,QAAQC,IAAIQ,GACLA,MUnOI,EAiCnBiT,oBAAqB,SAACC,GAClB,EAAK5S,MAAM4C,QAAQC,KAAK,CACpBnB,SAAS,eAAekR,EAAOjV,IAC/BgE,WAAW,CAACkR,QAAQ,GAAD,OAAID,EAAOjV,KAAMkJ,QAAQ,GAAD,OAAI+L,EAAO5L,UApC3C,EAwCnB8L,iBAAmB,SAACF,EAAO3G,GACpB2G,EAAO9D,aAAaxP,aAAauB,QAAQ,aACxCT,KAAK,6DAAyC,CAC1CqQ,QAAS,QACTnQ,KAAM,SAETvB,MAAK,SAACsF,GACH,IAAI0O,EAAmB,CAAC/R,GAAI4R,EAAOjV,IAAImD,OAAOuD,GAC9CpF,QAAQC,IAAI6T,GACZ,EAAKV,WAAWxP,KAAKkQ,GACrB,EAAKpW,UAAS,SAAAmQ,GACd,IAAMC,EAAQ,aAAOD,EAAS3N,MAC1BgQ,EAAKpC,EAASiG,WAAU,SAAAC,GAAE,OAAGA,EAAGtV,MAAMiV,EAAOjV,OAEjD,OADAoP,EAASoC,GAAIrO,OAAOuD,EACb,CAAClF,KAAM4N,SAIlB3M,KAAK,CACDrC,MAAO,YACPsC,KAAM,mGACNC,KAAM,UACNC,OAAQ,QA5DhB,EAAKhE,MAAM,CAAC4C,KAAK,IAFF,E,mNVmHZb,IACFqC,IAAI,yBAAyB,CAC1BC,QAAQ,CACJ,cAAkBtB,aAAauB,QAAQ,gBAG9C9B,MAAK,SAAAC,GACF,OAAOA,EAASG,QAEnBM,OAAM,SAAAC,GACHT,QAAQC,IAAIQ,M,OUpGVwT,E,OACFpS,EAASoS,EAAOnS,KAAI,gBAAKpD,EAAL,EAAEqD,GAAWG,EAAb,0CAAuBxD,OAAQwD,MACvDtE,KAAKF,SAAS,CACVwC,KAAK2B,IAET7B,QAAQC,IAAIrC,KAAKN,MAAM4C,M,2SAwCHtC,KAAKwV,W,yEAAfc,E,iBVgGUxL,EU9FawL,EV+F9B7U,IACFC,KAAK,wBAAwB,CAC1ByC,GAAI2G,EAAM3G,GACVF,OAAQ6G,EAAM7G,SAEjB/B,MAAK,SAAAC,GAEF,OADAC,QAAQC,IAAIF,GACLA,EAASG,QACjBM,OAAM,SAAAC,GAEL,OADAT,QAAQC,IAAIQ,GACLA,K,qTAXS,IAAAiI,I,4HUzFd,IAAD,OACL,OACI,kBAAC,GAAD,CAAS5K,MAAO,CAAEqE,OAAQ,WAEtB,kBAAC,IAAD,CAAYrE,MAAO,CAAEqE,OAAQ,WACzB,kBAAC,IAAW1D,KAAZ,MACA,kBAAC,IAAWA,KAAZ,OAGJ,yBAAKZ,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,GAAIrE,UAAW,MACrE,kBAAC,IAAD,CAAOsE,WAAYzE,KAAKN,MAAM4C,KAAMiU,MAAO,SAACR,EAAOS,GAC/C,MAAO,CACHxR,QAAQ,WAAK,EAAK8Q,oBAAoBC,IACtCU,cAAe,WAAK,EAAKR,iBAAiBF,EAAOS,OAIrD,kBAAC,GAAD,CAAQtV,MAAM,iBAAiBwD,UAAU,eAAe5D,IAAI,iBAC5D,kBAAC,GAAD,CAAQI,MAAM,OAAOwD,UAAU,OAAO5D,IAAI,SAC1C,kBAAC,GAAD,CAAQI,MAAM,QAAQwD,UAAU,cAAc5D,IAAI,gBAClD,kBAAC,GAAD,CAAQI,MAAM,SAASwD,UAAU,SAAS5D,IAAI,SAAS6D,OAAS,SAAA0F,GAC5D,OACI,8BACI,kBAAC,IAAD,CAAK7J,MAAO,OAAQ6J,OAIhC,kBAAC,GAAD,CAAQnJ,MAAM,mBAAmBwD,UAAU,aAAa5D,IAAI,eAC5D,kBAAC,GAAD,CAAQI,MAAM,aAAawD,UAAU,YAAY5D,IAAI,cACrD,kBAAC,GAAD,CAAQI,MAAM,YAAYwD,UAAU,aAAa5D,IAAI,eACrD,kBAAC,GAAD,CAAQI,MAAM,SAASwD,UAAU,SAAS5D,IAAI,SAAS6D,OAAQ,SAAAV,GAC3D,IAAIzD,EAAmB,SAAXyD,EAAoB,QAAqB,WAAXA,EAAsB,SAAW,MAC3E,OACI,8BACI,kBAAC,IAAD,CAAKzD,MAAOA,GAAQyD,QAMpC,kBAAC,IAAD,CAAQe,QAAS,WAAK,EAAKyQ,mBAA3B,yB,GAtHQnU,aCApBwB,GAAWC,IAAXD,OACAG,GAAY3D,IAAZ2D,QAuDOyT,G,YAlDX,WAAYvT,GAAQ,IAAD,8BACf,4CAAMA,KACDzD,MAAQ,CAAC4C,KAAK,IAFJ,E,mNAWIqI,K,OAAf0L,E,OACApS,EAASoS,EAAOnS,KAAI,gBAAKpD,EAAL,EAAEqD,GAAWG,EAAb,0CAAuBxD,OAAQwD,MACvDlC,QAAQC,IAAI4B,GACZjE,KAAKF,SAAS,CACVwC,KAAK2B,I,qIAMT,OACI,kBAAC,GAAD,CAAS/D,MAAO,CAAEqE,OAAQ,WACtB,kBAAC,IAAD,CAAYrE,MAAO,CAAEqE,OAAQ,WACzB,kBAAC,IAAW1D,KAAZ,MACA,kBAAC,IAAWA,KAAZ,OAEJ,yBAAKZ,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,GAAIrE,UAAW,MACzE,kBAAC,IAAD,CAAOsE,WAAYzE,KAAKN,MAAM4C,MAC1B,kBAAC,GAAD,CAAQpB,MAAM,iBAAiBwD,UAAU,OAAO5D,IAAI,SACpD,kBAAC,GAAD,CAAQI,MAAM,aAAawD,UAAU,YAAY5D,IAAI,YAAY6D,OAAQ,SAAA8F,GAC7D,IAAIhB,EAAO,IAAIyH,KAAKzG,GAAW+H,cAAcR,MAAM,GAAG,IAC9D,OAEI,8BACI,kBAAC,IAAD,CAAKxR,MAAO,QAASiJ,OAKjC,kBAAC,GAAD,CAAQvI,MAAM,mBAAmBwD,UAAU,YAAY5D,IAAI,aAC3D,kBAAC,GAAD,CAAQI,MAAM,SAASwD,UAAU,SAAS5D,IAAI,kB,GA3C7CQ,aC+CNqV,GApDO,SAAC,GAAoC,IAAxBrV,EAAuB,EAAlC4S,UAAyB5P,EAAS,6BACtD,OACG,kBAAC,IAAD,iBACKA,EADL,CAECK,OAAU,SAAAxB,GACN,OAAIgF,GAAKgM,kBACFhM,GAAKyO,OACG,kBAACtV,EAAc6B,IAGtBI,IAAK,CACDrC,MAAO,YACPsC,KAAM,mEACNC,KAAM,QACNC,OAAQ,OAIR,kBAAC,IAAD,CACA1C,GAAI,CACA6D,SAAS,IACTnF,MAAM,CACF0U,KAAMjR,EAAMyJ,eAO5BrJ,IAAK,CACDrC,MAAO,YACPsC,KAAM,kGACNC,KAAM,QACNC,OAAQ,OAIR,kBAAC,IAAD,CACA1C,GAAI,CACA6D,SAAS,IACTnF,MAAM,CACF0U,KAAMjR,EAAMyJ,mBCkBzBiK,G,YA1DX,WAAY1T,GAAQ,IAAD,uBACf,4CAAMA,KAFV2T,WAAW,EACQ,OAGf,EAAKpX,MAAQ,CACTqX,OAAM,EACNzU,KAAK,IAUT,EAAKmL,OAASmD,KAbG,qBAFF,E,iFAiBC,IAAD,OAEf5Q,KAAKyN,OAAOoD,GAAG,gCAA+B,SAAAvO,GAC1CF,QAAQC,IAAIC,MAEhBtC,KAAKyN,OAAOoD,GAAG,mBAAkB,SAAAvO,GAC7BF,QAAQC,IAAIC,MAEhBtC,KAAKyN,OAAOoD,GAAG,mBAAkB,SAAAvO,GAC7B,EAAKwU,WAAaE,aAAY,WAC1B,EAAKvJ,OAAOqB,KAAK,iBAAiB,CAAC9E,QAAQ,SAASoD,KAAK,GAAG6J,MAAM,GAAGxG,QAAQnO,EAAKmO,YACnF,QAEPzQ,KAAKyN,OAAOoD,GAAG,4BAA2B,SAAAvO,GACtC4U,cAAc,EAAKJ,iB,oCAIvB9W,KAAKyN,OAAOqB,KAAK,aAAa,Y,wCAI9B9O,KAAKyN,OAAOqB,KAAK,iBAAiB,CAAC9E,QAAQ,SAASoD,KAAK,KAAK6J,MAAM,S,+BAE9D,IAAD,OACL,OACI,6BACI,kBAAC,IAAD,CAAS/W,MAAO,CAAEuG,SAAU,OAAQuM,OAAO,QAAUhO,QAAS,kBAAI,EAAKmS,gBAAvE,QAGA,kBAAC,IAAD,CAASjX,MAAO,CAAEuG,SAAU,OAAQuM,OAAO,QAAUhO,QAAS,kBAAI,EAAKoS,oBAAvE,aAGA,kBAAC,IAAD,CAASlX,MAAO,CAAEuG,SAAU,OAAQuM,OAAO,QAAUhO,QAAS,kBAAI,EAAKqS,wBAAvE,yB,GApDS/V,aCkDVgW,G,YA/CX,WAAYnU,GAAQ,IAAD,8BACf,4CAAMA,KAOVuJ,UAAU,GARS,EASnB6K,aAAa,GAPT,EAAK7X,MAAM,CACP6N,cAAc,GACdiK,aAAa,IAJF,E,iNAWX1M,EAAQ,CAAC3G,GAAGnE,KAAKmD,MAAMyJ,SAAS9H,WAAWkR,QAAQ7L,KAAKnK,KAAKmD,MAAMyJ,SAAS9H,WAAWkF,S,SAC1Ea,GAAkBC,G,QAA/BxI,E,QACCmM,SAAQ,SAAAc,GACT,EAAK7C,UAAU1G,KAAK,CAACkH,EAAEqC,EAAQkI,QAAQtK,EAAEoC,EAAQnC,UAErDhL,QAAQC,IAAIC,GACZtC,KAAKF,SAAS,CACVyN,cAAcvN,KAAK0M,Y,qIAIvB,OACI,6BACI,kBAAC,KAAD,CAAKxM,MAAO,CAACqE,OAAQ,SACjB,kBAAC,KAAD,CAAKY,KAAM,IACP,yBAAKjF,MAAO,CAAEC,UAAW,QAASoE,OAAQ,OAAQiC,WAAY,QAASgF,aAAc,QACjF,kBAAC,KAAD,CAAKtL,MAAO,CAAEG,WAAY,SACtB,kBAAC,GAAD,CAAciC,KAAMtC,KAAKN,MAAM6N,mBAK3C,kBAAC,KAAD,CAAKpI,KAAM,IACP,yBAAKjF,MAAO,CAAEC,UAAW,QAASoE,OAAQ,OAAQiC,WAAY,QAASgF,aAAc,QACjF,kBAAC,KAAD,CAAKtL,MAAO,CAAEG,WAAY,SACtB,kBAAC0T,GAAD,CAAiBzR,KAAMtC,KAAKN,MAAM6N,yB,GArCrCjM,aCgBvBoW,G,iLAGE,OACQ,6BACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAQC,OAAK,EAACC,KAAK,IAAI1D,UAAWjM,KAClC,kBAAC,GAAD,CAAgB2P,KAAK,mBAAmB1D,UAAWqB,KACnD,kBAAC,GAAD,CAAiBqC,KAAK,YAAY1D,UAAWhR,IAC7C,kBAAC,GAAD,CAAiB0U,KAAK,YAAY1D,UAAW3O,IAC7C,kBAAC,IAAD,CAAQoS,OAAK,EAACC,KAAK,eAAe1D,UAAWK,KAC7C,kBAAC,IAAD,CAAQqD,KAAK,qBAAqB1D,UAAWzH,KAC7C,kBAAC,IAAD,CAAOmL,KAAK,mBAAmB1D,UAAWoD,KAC1C,kBAAC,GAAD,CAAiBM,KAAK,aAAa1D,UAAWG,KAC9C,kBAAC,GAAD,CAAiBuD,KAAK,gBAAgB1D,UAAWoB,KACjD,kBAAC,GAAD,CAAiBsC,KAAK,eAAe1D,UAAWkB,KAChD,kBAAC,GAAD,CAAgBuC,OAAK,EAACC,KAAM,UAAU1D,UAAWwC,KACjD,kBAAC,IAAD,CAAQxC,UAAW2C,W,GAjBnBvV,aA0BTuW,eAAWH,I,6BC3CpBI,G,2MAUFC,aACI,wBAAI7X,MAAO,CAAC8S,OAAO,OAAOgF,aAAa,SACnC,wBAAI9X,MAAO,CAACI,MAAM,SAAUL,UAAU,YAAW,kBAAC,IAAD,CAAMe,GAAG,IAAId,MAAO,CAAC8S,OAAO,SAAS,kBAACiF,GAAA,EAAD,CAAe/X,MAAO,CAACuG,SAAS,OAAOpG,WAAW,a,sEAVzI2Q,GAAI,IAAD,OACNA,EAAEkH,iBACFzV,aAAasU,QACb5O,GAAKgQ,QAAO,WACV,EAAKhV,MAAM4C,QAAQC,KAAnB,U,+BAiBF,OACI,yBAAK9F,MAAO,CAAC8S,OAAO,SACfvQ,aAAa2V,UACV,wBAAIlY,MAAO,CAAC8S,OAAO,OAAOgF,aAAa,SACnC,wBAAI9X,MAAO,CAACI,MAAM,SAAUL,UAAU,YAAW,uBAAGoY,KAAK,KAAKrT,QAAShF,KAAKsY,OAAO/E,KAAKvT,MAAOE,MAAO,CAAC8S,OAAO,SAAS,kBAACuF,GAAA,EAAD,CAAgBrY,MAAO,CAACuG,SAAS,OAAOpG,WAAW,YAC1K,wBAAIH,MAAO,CAACI,MAAM,SAAUL,UAAU,YAAW,kBAAC,IAAD,CAAMe,GAAI,CAAC6D,SAAS,aAAaC,WAAW,CAACjD,MAAM,GAAD,OAAIY,aAAauB,QAAQ,gBAAkB9D,MAAO,CAAC8S,OAAO,SAAS,kBAAC7R,EAAA,EAAD,CAAcjB,MAAO,CAACuG,SAAS,OAAOpG,WAAW,aAEzNL,KAAK+X,kB,GA9BNzW,aAoCNuW,eAAWC,IC/BlBU,GAAkBlZ,IAAlBkZ,OAAQC,GAAUnZ,IAAVmZ,OAsBDC,G,iLAjBX,OACE,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAQxY,MAAO,CAAEC,UAAW,UAC1B,kBAAC,EAAD,MACA,kBAAC,IAAD,CAAQF,UAAU,eAChB,kBAACuY,GAAD,CAAQvY,UAAU,yBAAyBC,MAAO,CAAEsE,QAAS,EAAGrE,UAAU,KACxE,kBAAC,GAAD,OAEF,kBAAC,GAAD,MACA,kBAACsY,GAAD,CAAQvY,MAAO,CAAEE,UAAW,WAA5B,8D,GAZQkB,aCAEsN,QACW,cAA7B+J,OAAO/L,SAASgM,UAEe,UAA7BD,OAAO/L,SAASgM,UAEhBD,OAAO/L,SAASgM,SAASC,MACvB,2DCZNC,IAASnU,OAAO,kBAAC,GAAD,MAASoU,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjX,MAAK,SAAAkX,GACJA,EAAaC,gBAEdzW,OAAM,SAAAU,GACLlB,QAAQkB,MAAMA,EAAM0D,c","file":"static/js/main.d6b1ba44.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Layout,Menu,Avatar } from 'antd';\r\nimport Title from 'antd/lib/typography/Title';\r\nimport {\r\n    DesktopOutlined,\r\n    PieChartOutlined,\r\n    FileOutlined,\r\n    TeamOutlined,\r\n    UserOutlined,\r\n  } from '@ant-design/icons';\r\nimport { Link, } from 'react-router-dom';\r\n\r\nconst {Sider } = Layout;\r\nconst { SubMenu } = Menu;\r\n\r\nclass SiderBar extends Component {\r\n    state = {\r\n        collapse: false,\r\n      }\r\n    \r\n      onCollapse = collapsed => {\r\n        this.setState({ collapsed });\r\n      };\r\n    render() {\r\n        return (\r\n            <Sider collapsible collapsed={this.state.collapsed} onCollapse={this.onCollapse}>\r\n          <div className=\"logo\" style={{minHeight:'60px',textAlign:'center',paddingTop:'15px'}}>\r\n            <Avatar style={{ float: 'left' }} src='./logo512.png' ></Avatar>\r\n            <Title style={{ color: 'white' }} level={3}>HCMUT Dryer</Title>\r\n          </div>\r\n          \r\n          <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n            <Menu.Item key=\"1\">\r\n              <PieChartOutlined />\r\n              <span>Thống kê dữ liệu</span>\r\n                <Link to=\"/data-statistics\"></Link>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"2\">\r\n              <DesktopOutlined />\r\n              <span>Công thức sấy</span>\r\n              <Link to=\"/script\"></Link>\r\n            </Menu.Item>\r\n            <SubMenu\r\n              key=\"sub1\"\r\n              title={\r\n                <span>\r\n                  <UserOutlined />\r\n                  <span>Quản lý tài khoản</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"3\">\r\n                Tài khoản Quản lý\r\n                <Link to=\"/all-user\"></Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"4\">Tài khoản Vận hành</Menu.Item>\r\n              <Menu.Item key=\"5\">\r\n                Tạo tài khoản\r\n                <Link to=\"/add-user\"></Link>\r\n                </Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"sub2\"\r\n              title={\r\n                <span>\r\n                  <UserOutlined />\r\n                  <span>Quản lý máy sấy</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"6\">\r\n                Danh sách máy sấy\r\n                <Link to=\"/all-machine\"></Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"7\">\r\n                Tạo máy sấy\r\n                <Link to=\"/add-machine\"></Link>\r\n                </Menu.Item>\r\n            </SubMenu>\r\n            <SubMenu\r\n              key=\"sub3\"\r\n              title={\r\n                <span>\r\n                  <TeamOutlined />\r\n                  <span>Máy sấy</span>\r\n                </span>\r\n              }\r\n            >\r\n              <Menu.Item key=\"8\">\r\n                Máy A\r\n                <Link to=\"/may-a\"></Link>\r\n              </Menu.Item>\r\n              <Menu.Item key=\"9\">Máy B</Menu.Item>\r\n            </SubMenu>\r\n            <Menu.Item key=\"10\">\r\n\r\n              <FileOutlined />\r\n              Thiết lập nâng cao\r\n              <Link to=\"/2\"></Link>\r\n            </Menu.Item>\r\n          </Menu>\r\n          \r\n        </Sider>\r\n        );\r\n    }\r\n}\r\n\r\nexport default SiderBar;","import axios from 'axios';\r\n\r\nexport const register = newUser =>{\r\n    return axios\r\n        .post('/users/register',{\r\n            first_name: newUser.first_name,\r\n            last_name:newUser.last_name,\r\n            email: newUser.email,\r\n            password: newUser.password,\r\n            dob: newUser.dob,\r\n            role: newUser.role,\r\n            phone: newUser.phone\r\n        })\r\n        .then(response=>{\r\n            \r\n            console.log('Registerd');\r\n            return response.data;\r\n        })\r\n}\r\n\r\nexport const login = user => {\r\n    return axios\r\n        .post('/users/login',{\r\n            email:user.email,\r\n            password:user.password\r\n        })\r\n        .then(response=>{\r\n            localStorage.setItem('useremail',user.email)\r\n            localStorage.setItem('usertoken',response.data.token);\r\n            localStorage.setItem('role',response.data.role);\r\n            console.log(response)\r\n            return response.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const getAllUsers = user => {\r\n    return axios\r\n        .get('/users/get-all-users',{\r\n            headers:{\r\n                'authorization' : localStorage.getItem('usertoken')\r\n            }\r\n        })\r\n        .then(response=>{\r\n            return response.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const getProfileUser = email => {\r\n    console.log(\"getProfile \"+ JSON.stringify(email))\r\n    return axios\r\n        .post('/users/profile',{email: email},{\r\n            headers:{\r\n                'authorization' : localStorage.getItem('usertoken')\r\n            }\r\n        })\r\n        .then(response=>{\r\n            return response.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n}\r\n\r\nexport const updateUser = user =>{\r\n    return axios\r\n        .post('/users/update-user',{\r\n            id: user.id,\r\n            first_name: user.first_name,\r\n            last_name: user.last_name,\r\n            email: user.email,\r\n            dob: user.dob,\r\n            phone: user.phone,\r\n            role: user.role\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}\r\n\r\nexport const deleteUser = user =>{\r\n    return axios\r\n        .post('/users/delete-user',{\r\n            email: user.email,\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}","import React, { Component } from 'react';\r\nimport { Table, Tag, Button, Layout, Breadcrumb } from 'antd';\r\nimport {getAllUsers,deleteUser} from './../../UserFunction/UserFunction';\r\nimport { Link, } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\n\r\nconst { Column, ColumnGroup } = Table;\r\nconst { Content } = Layout;\r\n\r\n\r\nclass UserTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {data:[]};\r\n    }\r\n    \r\n\r\n    async componentDidMount(){\r\n        const response = await getAllUsers();\r\n        let myData = response;\r\n        let result = myData.map(({ id: key, first_name: firstname, last_name: lastname, ...rest }) => ({ key, firstname, lastname, ...rest }));\r\n        this.setState({\r\n            data: result\r\n        })\r\n    }\r\n\r\n    deleteUser = email=> {\r\n        deleteUser({email:email}).then(res=>{\r\n            console.log(email);\r\n            if(res.error){\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Xóa không thành công!\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                  });\r\n            }else{\r\n\r\n                let tempData = this.state.data.filter(item => item.email !== email)\r\n                console.log(tempData);\r\n                this.setState({\r\n                    data: tempData\r\n                })\r\n                swal({\r\n                    title: \"Tadaaa...!\",\r\n                    text: \"Xóa thành công!\",\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                  });\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Content style={{ margin: '0 16px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                <Table dataSource={this.state.data}>\r\n                <ColumnGroup title=\"Full Name\">\r\n                    <Column title=\"First Name\" dataIndex=\"firstname\" key=\"firstname\" />\r\n                    <Column title=\"Last Name\" dataIndex=\"lastname\" key=\"lastname\" />\r\n                </ColumnGroup>\r\n                <Column title=\"Role\" dataIndex=\"role\" key=\"role\" render = {role => {\r\n                    let color = role==='quanly'?'red':'blue';\r\n                    return (\r\n                        <span>\r\n                            <Tag color={color}>{role}</Tag>\r\n                        </span>\r\n                    )\r\n                } }/>\r\n            \r\n                <Column title=\"Phone\" dataIndex=\"phone\" key=\"phone\" />\r\n                <Column title=\"Email\" dataIndex=\"email\" key=\"email\" />\r\n                <Column\r\n                    title=\"Action\"\r\n                    key=\"action\"\r\n                    dataIndex=\"email\"\r\n                    render={email => (\r\n                        <span>\r\n                            <Button type=\"link\" >\r\n                                {/* <Link to ={`/edit-user/${key}`} >Edit</Link> */}\r\n                                <Link to={{\r\n                                    pathname:'/edit-user',\r\n                                    aboutProps:{\r\n                                        email:`${email}`\r\n                                    }\r\n                                }}>Edit</Link>\r\n                            </Button>\r\n                            <Button type=\"link\" danger onClick={()=>this.deleteUser(email)}>\r\n                                Delete\r\n                            </Button>\r\n                        </span>\r\n                    )}\r\n                />\r\n            </Table>\r\n            </div>\r\n            \r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserTable;","import React, { Component, } from 'react';\r\nimport { Form, Input, Button,Radio, DatePicker} from 'antd';\r\nimport {register} from './../../UserFunction/UserFunction';\r\nimport swal from 'sweetalert';\r\n\r\n// const { Option } = Select;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\nclass UserAddAccount extends Component {\r\n    formRef = React.createRef();\r\n    onFinish = values => {\r\n        const DOB = values['dob'];\r\n        const result = {\r\n            ...values,\r\n            'dob': DOB.format('YYYY-MM-DD'),\r\n        }\r\n        register({first_name: result.first_name, last_name: result.last_name, password: result.password, email: result.email,dob: result.dob,phone: result.phone, role: result.role}).then(res=>{\r\n            console.log(res);\r\n            // if(res){\r\n            //     this.props.history.push(`/may-a`);\r\n            // }\r\n            if(res.error){\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Email đã tồn tại!\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                  });\r\n                \r\n            }else{\r\n                swal({\r\n                    title: \"Tadaaa...!\",\r\n                    text: \"Đăng ký thành công!\",\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                  });\r\n                  this.props.history.push(`/all-user`);\r\n            }\r\n        })\r\n        console.log(result);\r\n    };\r\n\r\n    onReset = () => {\r\n        this.formRef.current.resetFields();\r\n    };\r\n\r\n    onFill = () => {\r\n        this.formRef.current.setFieldsValue({\r\n            note: 'Hello world!',\r\n            gender: 'male',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin:'60px', background:'white'}}>\r\n                <h1 style={{margin:'25px',fontSize:'45px'}}>Thêm tài khoản</h1>\r\n                <div style={{marginRight:'250px',paddingBottom:'15px'}}>\r\n                    <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n                        <Form.Item name=\"email\" label=\"Email\" rules={[\r\n                                                                    { type: 'email',message: 'Email không hợp lệ' },\r\n                                                                    { required: true,message: 'Xin nhập Email' }\r\n                                                                    ]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            label=\"Confirm Password\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Xin hãy nhập mật khẩu!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(rule, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject('Mật khẩu không trùng khớp!');\r\n                                },\r\n                            }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"role\" label=\"Chức năng\" rules={[{ required: true}]}>\r\n                            <Radio.Group>\r\n                            <Radio value=\"quanly\">Quản lý</Radio>\r\n                            <Radio value=\"vanhanh\">Vận hành</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"first_name\" label=\"Họ và đệm\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Họ và tên đệm!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"last_name\" label=\"Tên\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Tên!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"dob\" label=\"Ngày sinh\" rules={[{ type: 'object', required: true, message: 'Please select time!' }]}>\r\n                            <DatePicker showTime format=\"YYYY-MM-DD\" />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"phone\" label=\"Số điện thoại\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Số điện thoại!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                            <Button htmlType=\"button\" onClick={this.onReset}>\r\n                                Reset\r\n                            </Button>\r\n                            <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\r\n                                Fill form\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserAddAccount;","class Auth{\r\n    constructor(){\r\n        this.authenticate = '';\r\n    }\r\n\r\n    login(cb){\r\n        this.authenticate = localStorage.getItem('usertoken');\r\n        cb();\r\n    }\r\n\r\n    logout(cb){\r\n        this.authenticate = '';\r\n        cb();\r\n    }\r\n\r\n    isAuthenticated(){\r\n        return this.authenticate;\r\n    }\r\n\r\n    isQL(){\r\n        if(localStorage.getItem('role')==='quanly') return true;\r\n        else return false;\r\n    }\r\n\r\n    isVH(){\r\n        if(localStorage.getItem('role')==='vanhanh') return true;\r\n        else return false;\r\n    }\r\n\r\n}\r\n\r\nexport default new Auth();","import React, { Component } from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\nimport {login} from './../UserFunction/UserFunction';\r\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\r\nimport swal from 'sweetalert';\r\nimport auth from '../auth';\r\nimport './Login.css'\r\nclass Login extends Component {\r\n\r\n\r\n    \r\n    formRef = React.createRef();\r\n    onFinish = values => {\r\n        login({email:values.username,password:values.password}).then(res=>{\r\n            if(!res.error){\r\n                auth.login(()=>{\r\n                    this.props.history.push(`/all-user`);\r\n                })\r\n            }else{\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Sai Email hoac Password\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                  });\r\n            }\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div style={{width:'35%', margin:'auto', textAlign:'center',marginTop:'65px'}}>\r\n                <Form\r\n                ref={this.formRef}\r\n                name=\"normal_login\"\r\n                className=\"login-form\"\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinish}\r\n                style={{padding:'35px 35px 15px 35px',background:'white'}}\r\n            >\r\n                <Form.Item\r\n                    name=\"username\"\r\n                    rules={[{ required: true, message: 'Please input your Username!' }]}\r\n                >\r\n                    <Input prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    name=\"password\"\r\n                    rules={[{ required: true, message: 'Please input your Password!' }]}\r\n                >\r\n                    <Input\r\n                        prefix={<LockOutlined className=\"site-form-item-icon\" />}\r\n                        type=\"password\"\r\n                        placeholder=\"Password\"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\r\n                        Log in\r\n                    </Button>\r\n                </Form.Item>\r\n            </Form>\r\n            </div>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\nimport Chart from \"chart.js\";\r\n\r\n\r\nclass ChartMachine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartRef = React.createRef();\r\n  }\r\n  componentDidUpdate() {\r\n    \r\n    this.myChart.data.datasets[0].data = this.props.data;\r\n    this.myChart.update();\r\n  }\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.chartRef.current, {\r\n      type: 'line',\r\n      data: {\r\n        datasets: [{\r\n          label: 'Temperature',\r\n          data: [],\r\n          fill: false,\r\n          lineTension: 0.2,\r\n          borderColor: 'red',\r\n          borderWidth: 1,\r\n        }]\r\n      },\r\n      options: {\r\n        title: {\r\n          text: 'Temperature Chart',\r\n          display: true\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            type: 'time',\r\n            time: {\r\n                unit: 'second',\r\n                displayFormats:{\r\n                  'second': 'h:mm:ss a'\r\n                }\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            display: true,\r\n            ticks: {\r\n                beginAtZero: true,\r\n                max: 100\r\n            }\r\n        }]\r\n        }\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <canvas ref={this.chartRef} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartMachine;","import React, { Component } from 'react';\r\nimport Chart from \"chart.js\";\r\n\r\n\r\nclass ChartMachine extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartRef = React.createRef();\r\n  }\r\n  componentDidUpdate() {\r\n    \r\n    this.myChart.data.datasets[0].data = this.props.data;\r\n    this.myChart.update();\r\n  }\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.chartRef.current, {\r\n      type: 'bar',\r\n      data: {\r\n        datasets: [{\r\n          label: 'Humidity',\r\n          data: [],\r\n          fill: false,\r\n          lineTension: 0.2,\r\n          borderColor: 'blue',\r\n          borderWidth: 1,\r\n        }]\r\n      },\r\n      options: {\r\n        title: {\r\n          text: 'Humidity Chart',\r\n          display: true\r\n        },\r\n        scales: {\r\n          xAxes: [{\r\n            type: 'time',\r\n            time: {\r\n                unit: 'second',\r\n                displayFormats:{\r\n                  'second': 'h:mm:ss a'\r\n                }\r\n            }\r\n          }],\r\n          yAxes: [{\r\n            display: true,\r\n            ticks: {\r\n                beginAtZero: true,\r\n                max: 100\r\n            }\r\n        }]\r\n        }\r\n      }\r\n    });\r\n  }\r\n  render() {\r\n\r\n    return (\r\n      <canvas ref={this.chartRef} />\r\n    );\r\n  }\r\n}\r\n\r\nexport default ChartMachine;","import axios from 'axios';\r\nimport {saveAs} from 'file-saver';\r\n\r\n// Get All Machines show in Machine Table\r\nexport const getAllMachines = user => {\r\n    return axios\r\n        .get('/machines/get-all-machines',{\r\n            headers:{\r\n                'authorization' : localStorage.getItem('usertoken')\r\n            }\r\n        })\r\n        .then(response=>{\r\n            return response.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n}\r\n\r\n// Add machine\r\nexport const register = machine =>{\r\n    return axios\r\n        .post('/machines/register',{\r\n            name: machine.name,\r\n            position:machine.position,\r\n            description: machine.description,\r\n            code: machine.code\r\n        })\r\n        .then(response=>{\r\n            console.log('Registerd');\r\n            return response.data;\r\n        }).catch(err=>{\r\n            return err\r\n        })\r\n}\r\n\r\n// Get Status of 4 Devices\r\nexport const getDataDevice = machineCode => {\r\n    return axios\r\n        .post('/machines/get-data-device',{\r\n            code: machineCode\r\n        })\r\n        .then(response=>{\r\n            return response.data;\r\n        }).catch(err=>{\r\n            return err\r\n        })\r\n}\r\n\r\n\r\n\r\nexport const getProfileMachine = id =>{\r\n    return axios\r\n        .post('/machines/profile',{id: id},{\r\n            headers:{\r\n                'authorization' : localStorage.getItem('usertoken')\r\n            }})\r\n        .then(response=>{\r\n            console.log('Registerd');\r\n            return response.data;\r\n        }).catch(err=>{\r\n            return err\r\n        })\r\n}\r\n\r\nexport const updateMachine = machine =>{\r\n    return axios\r\n        .post('/machines/update-machine',{\r\n            id: machine.id,\r\n            position: machine.position,\r\n            name: machine.name,\r\n            description: machine.description,\r\n            code: machine.code\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}\r\n\r\n\r\nexport const deleteMachine = machine =>{\r\n    return axios\r\n        .post('/machines/delete-machine',{\r\n            id: machine.id,\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}\r\n\r\n// Add Result\r\nexport const addSetup = setup =>{\r\n    return axios\r\n        .post('/setups/add-setup',{\r\n            user_email: setup.user_email,\r\n            machine_name: setup.machine_name,\r\n            code:setup.code,\r\n            mass: setup.mass,\r\n            typeOfFruit:setup.typeOfFruit,\r\n            timeStart:setup.timeStart,\r\n            timeFinish:setup.timeFinish,\r\n            script:setup.script\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}\r\n\r\n// Get All result \r\nexport const getAllSetups = setup => {\r\n    return axios\r\n        .get('/setups/get-all-setups',{\r\n            headers:{\r\n                'authorization' : localStorage.getItem('usertoken')\r\n            }\r\n        })\r\n        .then(response=>{\r\n            return response.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n}\r\n\r\n\r\n\r\nexport const addScript = script => {\r\n    let myScript = JSON.stringify(script.script);\r\n    return axios\r\n        .post('/scripts/add-script',{\r\n            name: script.name,\r\n            script: myScript,\r\n            totalTime: script.totalTime,\r\n            useremail:script.useremail\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n    \r\n}\r\n\r\nexport const getAllScripts = scripts => {\r\n    return axios\r\n        .get('/scripts/get-all-scripts',{\r\n            headers:{\r\n                'authorization' : localStorage.getItem('usertoken')\r\n            }\r\n        })\r\n        .then(response=>{\r\n            return response.data;\r\n        })\r\n        .catch(err=>{\r\n            console.log(err);\r\n        })\r\n}\r\n\r\n// Update GOOD BAD MEDIUM when close page\r\nexport const updateResult = setup => {\r\n    return axios\r\n        .post('/setups/update-setups',{\r\n            id: setup.id,\r\n            result: setup.result\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n    \r\n}\r\n\r\nexport const updateTimeFinishSetup = setup => {\r\n    return axios\r\n        .post('/setups/update-time-setups',{\r\n            id: setup.id,\r\n            time: setup.time\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n    \r\n}\r\n\r\nexport const getDataChartSetup = setup => {\r\n    return axios\r\n        .post('/setups/get-data-chart-setup',{\r\n            id: setup.id,\r\n            code: setup.code\r\n        })\r\n        .then(response=>{\r\n            console.log(response);\r\n            return response.data;\r\n        }).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}\r\n\r\nexport const getPDF = () => {\r\n    return axios\r\n        .get('/setups/create-pdf')\r\n        .then(\r\n            ()=>axios.get('setups/get-pdf',{responseType:'blob'})\r\n            .then((res)=>{\r\n                const pdfBlob = new Blob([res.data],{type:'application/pdf'});\r\n                saveAs(pdfBlob,'report.pdf');\r\n            })\r\n            .catch((err)=>{\r\n                console.log('my err',err)\r\n            })\r\n        ).catch(err=>{\r\n            console.log(err);\r\n            return err;\r\n        })\r\n}","import React, { Component } from 'react';\r\nimport {Avatar, Switch } from 'antd';\r\nimport { AlertOutlined } from '@ant-design/icons';\r\nclass Device extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            status: this.props.status,\r\n        };\r\n    }\r\n    isChange=true;\r\n    lightStatus=this.props.status;\r\n\r\n    renderOn(){\r\n        return <Avatar size={100} icon={<AlertOutlined />} style={{ backgroundColor: '#87d068' }}></Avatar>\r\n    }\r\n\r\n    renderOff(){\r\n        return  <Avatar size={100} icon={<AlertOutlined />} ></Avatar>\r\n    }\r\n\r\n    showStatus(){\r\n        if(this.props.isChange===false){\r\n            if(this.lightStatus === true) {\r\n                return this.renderOn();\r\n            }\r\n            else {\r\n                return this.renderOff();\r\n            }\r\n        }\r\n        else{\r\n            this.lightStatus=this.props.status;\r\n            if(this.props.status === true) {\r\n                return this.renderOn();\r\n            }\r\n            else {\r\n                return this.renderOff();\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{margin:'35px',background: '#ececec', padding:'40px 0px',borderRadius:'6px'}} >\r\n                <div style={{width:'100%',display:'flex'}}>\r\n                    <div style={{width:'20%',paddingLeft:'10px'}}><Switch disabled={this.props.isDisabled} checked={this.props.status} onClick={()=> {this.props.changeStatus(this.props.id,this.props.status)}}/></div>\r\n                    <div style={{width:'60%',textAlign:'center',fontSize:'25px',fontFamily:'monospace',fontWeight:'bold'}} >{this.props.children}</div>\r\n                    <div style={{width:'20%'}}></div>\r\n                </div>\r\n                <div style={{textAlign:'center'}}>\r\n                    {this.showStatus()} \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Device;","import React, { Component } from 'react';\r\nimport {Avatar } from 'antd';\r\nimport { AlertOutlined } from '@ant-design/icons';\r\nclass MiniDevice extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            status: this.props.status,\r\n        };\r\n    }\r\n    isChange=true;\r\n    lightStatus=this.props.status;\r\n\r\n    renderOn(){\r\n        return <Avatar size={100} icon={<AlertOutlined />} style={{ backgroundColor: '#87d068' }}></Avatar>\r\n    }\r\n\r\n    renderOff(){\r\n        return  <Avatar size={100} icon={<AlertOutlined />} ></Avatar>\r\n    }\r\n\r\n    showStatus(){\r\n        if(this.props.isChange===false){\r\n            if(this.lightStatus === true) {\r\n                return this.renderOn();\r\n            }\r\n            else {\r\n                return this.renderOff();\r\n            }\r\n        }\r\n        else{\r\n            this.lightStatus=this.props.status;\r\n            if(this.props.status === true) {\r\n                return this.renderOn();\r\n            }\r\n            else {\r\n                return this.renderOff();\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div style={{background: '#ececec', padding:'40px 0px'}} >\r\n                <div style={{width:'100%',display:'flex'}}>\r\n                    <div style={{width:'100%',textAlign:'center',fontSize:'25px',fontFamily:'monospace',fontWeight:'bold'}} >{this.props.children}</div>\r\n                </div>\r\n                <div style={{textAlign:'center'}}>\r\n                    {this.showStatus()} \r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MiniDevice;","import React, { Component } from 'react';\r\nimport { Row, Col, Slider, Select, Button } from 'antd';\r\nimport ChartMachine from './ChartMachine/ChartMachine';\r\nimport ChartMachineBar from './ChartMachineBar/ChartMachineBar';\r\nimport { addSetup, getAllScripts, addScript, getDataDevice, updateTimeFinishSetup } from './../MachineFunction/MachineFunction';\r\n\r\nimport { RetweetOutlined } from '@ant-design/icons';\r\nimport swal from '@sweetalert/with-react'\r\n\r\nimport './Machine.css';\r\nimport Device from './Device/Device';\r\nimport MiniDevice from './Device/MiniDevice';\r\nimport socketIOClient from 'socket.io-client';\r\n\r\n// const marksTemp = {\r\n//     50: '50°C',\r\n\r\n//     200: {\r\n//         style: {\r\n//             color: '#f50',\r\n//         },\r\n//         label: <strong>200°C</strong>,\r\n//     },\r\n// };\r\n// const marksHumid = {\r\n//     50: '50%',\r\n\r\n//     200: {\r\n//         style: {\r\n//             color: '#f50',\r\n//         },\r\n//         label: <strong>100%</strong>,\r\n//     },\r\n// };\r\nconst marksMass = {\r\n    0: '0 Kg',\r\n    50: '50 Kg',\r\n\r\n    200: {\r\n        style: {\r\n            color: '#f50',\r\n        },\r\n        label: <strong>200Kg</strong>,\r\n    },\r\n};\r\nconst { Option } = Select;\r\n\r\nclass Machine extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.countdownRef = React.createRef();\r\n        const endpoint = \"192.168.100.5:2017\";\r\n        this.state = {\r\n            timeActive: false,       // Show Time Start / Time Finish or not\r\n            timeStartActive: '',\r\n            timeFinishActive: '',\r\n            timeFinish: 0,            // Amount of time to Finish\r\n            isChange: true,          //  To set change for device\r\n            isDisabled: false,       //  To set change for Switch of device\r\n            isChooseScript: true,   //  To switch choose script and create script\r\n            statusMachine: 0,        //  Status of machine OFF READY ACTIVE\r\n            flagTime: false,         //  To get standard time\r\n            standardTime: 0,\r\n            choosenScript: '',       //  Script Activity\r\n            idSetup:'',             // Id of Setup which is submited!\r\n            nameOfChoosenScript: '', //  Name of Script\r\n            dataLineChart: [],\r\n            dataControl: {\r\n                tempValue: 100,\r\n                humidValue: 100,\r\n                massValue: 100,\r\n                selectedFruit: 'Banana'\r\n            },\r\n            typeOfFruit: [\r\n                {\r\n                    id: 1,\r\n                    value: \"Banana\"\r\n                }, {\r\n                    id: 2,\r\n                    value: \"Orange\"\r\n                }, {\r\n                    id: 3,\r\n                    value: \"Pine Apple\"\r\n                }, {\r\n                    id: 4,\r\n                    value: \"Coconut\"\r\n                }\r\n            ],\r\n            dataNewScript: [],\r\n            listScript: [],\r\n            dataDevice: [\r\n                // Data Sample:\r\n                // {\r\n                //     id: 1,\r\n                //     title: 'GIA NHIET 1',\r\n                //     status: true\r\n                // }\r\n            ]\r\n        }\r\n        this.socket = socketIOClient(endpoint);\r\n    }\r\n\r\n    dataChart = [];   // Temperable Array Data contain Data from Server\r\n\r\n    getAckServer = value => {   //Function active when have event Socket.on('server-send-ack')\r\n        console.log(\"Ack from server \" + JSON.stringify(value));\r\n        if (this.props.location.aboutProps.code === value.machine) {\r\n            this.setState({\r\n                dataDevice: value.data,     // Update status of 4 Device\r\n                isChange: true,              // Device is change or not\r\n                statusMachine: value.stt,    // Status of Machine\r\n                isDisabled: false            // Can switch or not - To prevent Double CLick when Machine not received ACK from Server\r\n            })\r\n        }\r\n        if(this.state.statusMachine===-1){\r\n            swal({\r\n                title: \"Oppsss...!\",\r\n                text: \"Máy sấy đã bị tắt!\",\r\n                icon: \"error\",\r\n                button: \"OK\",\r\n            });\r\n        }\r\n        \r\n    }\r\n\r\n    getDataServer = value => {  //Function active when have event Socket.on('server-send-data')\r\n        if(this.props.location.aboutProps.code === value.machine){\r\n            let dataSample = {\r\n                x: value.time,\r\n                y: value.temp\r\n            }\r\n            this.dataChart.push(dataSample)\r\n            if (this.dataChart.length > 15) this.dataChart.shift();  // Delete 1 item in array when array > 15 item - To look chart better\r\n            this.setState({\r\n                dataLineChart: this.dataChart\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    async componentDidMount() {\r\n\r\n        this.socket.on('server-send-ack', this.getAckServer);\r\n        this.socket.on('server-send-data', this.getDataServer);\r\n\r\n        let allScripts = await getAllScripts();\r\n        let dataDevice = await getDataDevice(this.props.location.aboutProps.code)   // Result is all information of machine (name, position, code,...)\r\n        let data = dataDevice.dataDevice;\r\n        let stt = dataDevice.statusMachine;\r\n        this.setState({\r\n            listScript: allScripts,\r\n            dataDevice: data,\r\n            statusMachine: stt\r\n        })\r\n    }\r\n\r\n\r\n    componentWillUnmount = () => {  // To close Socket when redirect to another page\r\n        this.socket.close();\r\n    }\r\n\r\n    onChangeTempValue = value => { // To Update Temperature of dataControl\r\n        this.setState({\r\n            dataControl: {\r\n                ...this.state.dataControl,\r\n                tempValue: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeHumidValue = value => { // To Update Humidity of dataControl\r\n        this.setState({\r\n            dataControl: {\r\n                ...this.state.dataControl,\r\n                humidValue: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeMassValue = value => {  // To Update Humidity of dataControl\r\n        this.setState({\r\n            dataControl: {\r\n                ...this.state.dataControl,\r\n                massValue: value\r\n            }\r\n        })\r\n    }\r\n\r\n    async send() { // To Send control Device - use in Create Script\r\n\r\n        // Send socket to Server\r\n        this.socket.emit('client-send-control', { machine: this.props.location.aboutProps.code, stt: 1, data: this.state.dataDevice });\r\n\r\n        let temp = ''; // To Contain stt to create Script. Ex: {1000}\r\n        await this.state.dataDevice.forEach(e => {\r\n            temp = temp + Number(e.status);\r\n        })\r\n\r\n        let tempTime = new Date().getTime();\r\n        let timeStart = new Date(tempTime).toString();\r\n\r\n        if (this.state.flagTime === false) {\r\n            let obj = { time: 0, stt: temp }\r\n            this.setState({\r\n                flagTime: true,\r\n                standardTime: Date.now(),   // Set standard Time again for subtraction in next Send()\r\n                timeStartActive: timeStart,\r\n                isDisabled: true\r\n            })\r\n            this.setState(prevState => ({\r\n                dataNewScript: [...prevState.dataNewScript, obj],\r\n            }))\r\n            this.onClickSendConfigNotTimeFinish();\r\n\r\n        } else {\r\n            let myTime = Date.now() - this.state.standardTime;\r\n            let obj = { time: myTime, stt: temp };\r\n            this.setState(prevState => ({\r\n                dataNewScript: [...prevState.dataNewScript, obj],\r\n                standardTime: Date.now(),    // Set standard Time again for subtraction in next Send()\r\n                isDisabled: true\r\n            }))\r\n        }\r\n        console.log(this.state.dataNewScript);\r\n    }\r\n\r\n    async finish() {\r\n\r\n        let temp = new Date().getTime();\r\n        let timeFinish = new Date(temp).toString();\r\n        this.setState({\r\n            isChange: false,\r\n            flagTime: false,\r\n            timeFinishActive: timeFinish,\r\n            isDisabled: true\r\n        })\r\n\r\n        // Auto set OFF for 4 Device\r\n        await this.setState(preState => {\r\n            let newItems = [...preState.dataDevice];\r\n            newItems.forEach(e => { e.status = false });\r\n            return { dataDevice: newItems };\r\n        })\r\n\r\n        this.socket.emit('client-send-control', { machine: this.props.location.aboutProps.code, stt: 0, data: this.state.dataDevice });\r\n\r\n        let myTime = Date.now() - this.state.standardTime;\r\n        let obj = { time: myTime, stt: '0000' }\r\n        await this.setState(prevState => ({\r\n            dataNewScript: [...prevState.dataNewScript, obj]\r\n        }))\r\n\r\n        let totalTime = 0;\r\n        for (let i = 0; i < this.state.dataNewScript.length; i++) {\r\n            totalTime = totalTime + this.state.dataNewScript[i].time\r\n        }\r\n\r\n        let scriptStr = JSON.stringify(this.state.dataNewScript)\r\n        let resultForlistScript = { name: this.state.nameOfChoosenScript, script: scriptStr, totalTime: totalTime };\r\n        // Add Username name to save in DB with newScript\r\n        let resultForSubmit = { name: this.state.nameOfChoosenScript, script: this.state.dataNewScript, totalTime: totalTime, useremail: localStorage.getItem('useremail') };\r\n\r\n        // Update newScript in listScript to show in Auto method\r\n        await this.setState(prevState => ({\r\n            listScript: [...prevState.listScript, resultForlistScript]\r\n        }))\r\n\r\n        // Update to Server newScript\r\n        addScript(resultForSubmit).then(res => {\r\n            console.log(res)\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n\r\n        // Update to Server the result when adding new script\r\n        this.updateConfigTimeFinish();\r\n\r\n        this.setState({\r\n            dataNewScript: [],   // Delete dataNewScript for another create newScript\r\n        })\r\n    }\r\n\r\n    // Send result to server\r\n\r\n    // onClickSendConfig() {\r\n    //     const setup = {\r\n    //         user_email: localStorage.getItem('useremail'),\r\n    //         machine_name: this.props.location.aboutProps.name,\r\n    //         mass: this.state.dataControl.massValue,\r\n    //         script: this.state.nameOfChoosenScript,\r\n    //         typeOfFruit: this.state.dataControl.selectedFruit,\r\n    //         timeStart: this.state.timeStartActive.slice(0, 24),\r\n    //         timeFinish: this.state.timeFinishActive.slice(0, 24)\r\n    //     }\r\n\r\n    //     addSetup(setup).then(res => {\r\n    //         console.log(res);\r\n\r\n    //     }).catch(err => {\r\n    //         console.log(err)\r\n    //     })\r\n    // }\r\n\r\n    updateConfigTimeFinish(){\r\n        const setup = {\r\n            id: this.state.idSetup,\r\n            time:this.state.timeFinishActive.slice(0, 24)\r\n        }\r\n\r\n        updateTimeFinishSetup(setup).then(res=>{\r\n            console.log(res)\r\n        }).catch(err=>{\r\n            console.log(err)\r\n        })\r\n        this.socket.emit('client-get-data-complete',{machine:this.props.location.aboutProps.code,idSetup:this.state.idSetup})\r\n    }\r\n\r\n    onClickSendConfigNotTimeFinish() {\r\n        const setup = {\r\n            user_email: localStorage.getItem('useremail'),\r\n            machine_name: this.props.location.aboutProps.name,\r\n            code: this.props.location.aboutProps.code,\r\n            mass: this.state.dataControl.massValue,\r\n            script: this.state.nameOfChoosenScript,\r\n            typeOfFruit: this.state.dataControl.selectedFruit,\r\n            timeStart: this.state.timeStartActive.slice(0, 24)\r\n            // timeFinish: this.state.timeFinishActive.slice(0, 24)\r\n        }\r\n\r\n        addSetup(setup).then(res => {\r\n            console.log(res)\r\n            this.setState({\r\n                idSetup:res.id\r\n            })\r\n            this.socket.emit('client-get-data',{machine:this.props.location.aboutProps.code,idSetup:res.id})\r\n        }).catch(err => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    // Send control to server in Auto method\r\n    waitFor = (sttStr, ms) => new Promise(r => {\r\n        let sttArr = sttStr.split('')\r\n        let deviceArr = this.state.dataDevice\r\n        deviceArr.forEach((ele, idx) => {\r\n            ele.status = Boolean(Number(sttArr[idx]));\r\n        })\r\n        this.setState({\r\n            dataDevice: deviceArr,\r\n            isChange: false\r\n        })\r\n        this.socket.emit('client-send-control', { machine: this.props.location.aboutProps.code, stt: 1, data: this.state.dataDevice });\r\n\r\n        console.log(\"sent!!!\");\r\n        setTimeout(r, ms)\r\n    })\r\n\r\n    // Create asyn FOR loop\r\n    asyncForEach = async (array, callback) => {\r\n        for (let index = 0; index < array.length; index++) {\r\n            if (this.state.statusMachine === -1) {\r\n                \r\n                break;\r\n            }\r\n            await callback(array[index], index, array)\r\n        }\r\n    }\r\n\r\n    // Function implement the Script in Auto method\r\n    start = async (arr) => {\r\n        await this.asyncForEach(arr, async (element) => {\r\n            await this.waitFor(element.stt, element.time)\r\n        })\r\n        await this.updateConfigTimeFinish();\r\n        if (this.state.statusMachine !== -1) {\r\n            await this.socket.emit('client-send-control-complete', { machine: this.props.location.aboutProps.code, stt: 0, data: this.state.dataDevice });\r\n        }\r\n    }\r\n\r\n    // Start Auto Method\r\n    async onClickStartScript() {\r\n        if (this.state.choosenScript) {\r\n            let temp = new Date().getTime();\r\n            let tempFinish = temp + this.state.timeFinish;\r\n            let timeStart = new Date(temp).toString();\r\n            let timeFinish = new Date(tempFinish).toString();\r\n            await this.setState({\r\n                timeActive: true,\r\n                timeStartActive: timeStart,\r\n                timeFinishActive: timeFinish\r\n            })\r\n            this.onClickSendConfigNotTimeFinish();\r\n            let rs = JSON.parse(this.state.choosenScript); //convert to array\r\n            for (let index = 0; index < rs.length; index++) {\r\n                if (index !== rs.length - 1) {\r\n                    rs[index].time = rs[index + 1].time\r\n                } else { rs[index].time = 0 }\r\n            }\r\n            console.log(this.state.choosenScript);\r\n            this.start(rs);\r\n        }\r\n        else {\r\n            swal({\r\n                title: \"Oppesss...!\",\r\n                text: \"Bạn chưa chọn kịch bản!\",\r\n                icon: \"warning\",\r\n                button: \"OK\",\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    // Select Fruit type\r\n    onChangeSelect = value => {\r\n        this.setState({\r\n            dataControl: {\r\n                ...this.state.dataControl,\r\n                selectedFruit: value\r\n            }\r\n        })\r\n    }\r\n\r\n    onChangeSelectScript = value => {\r\n        let time = this.state.listScript[value].totalTime;\r\n        let script = this.state.listScript[value].script;\r\n        let name = this.state.listScript[value].name;\r\n        console.log(script)\r\n        this.setState({\r\n            timeFinish: time,\r\n            timeActive: false,\r\n            choosenScript: script,\r\n            nameOfChoosenScript: name\r\n        })\r\n\r\n    }\r\n\r\n    changeStatus = (id, stt) => {\r\n        this.setState(preState => {\r\n            const newItems = [...preState.dataDevice];\r\n            if (stt) newItems[id - 1].status = false;\r\n            else newItems[id - 1].status = true;\r\n            return { dataDevice: newItems };\r\n        })\r\n        this.setState({\r\n            isChange: false\r\n        })\r\n    }\r\n\r\n    renderTimeActive() {\r\n        if (this.state.timeActive === true) {\r\n            return <div>\r\n                <h5 style={{ fontSize: '20px' }}>Thời gian bắt đầu: {this.state.timeStartActive.slice(16, 24)}</h5>\r\n                <h5 style={{ fontSize: '20px' }}>Thời gian kết thúc dự kiến: {this.state.timeFinishActive.slice(16, 24)}</h5>\r\n            </div>\r\n        }\r\n    }\r\n\r\n    renderPeriod() {\r\n        let time = new Date(this.state.timeFinish).toISOString().slice(11, 19);\r\n        return <h5 style={{ fontSize: '20px' }}>Thời lượng sấy: {time}</h5>\r\n    }\r\n\r\n    renderCreateScript() {\r\n        return <div style={{ margin: '20px', background: 'white', borderRadius: '6px' }}>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ fontSize: '50px', textAlign: 'center', width: '85%' }}>{this.props.location.aboutProps.name}</div>\r\n                <div style={{ width: '15%', margin: '15px' }} onClick={() => this.onClickCreateScript()}>\r\n                    <RetweetOutlined id='sw-method1' style={{ fontSize: '45px', border: '1px #D7EEF1 solid', width: '80px', borderRadius: '10px', backgroundColor: '#F1F8F9' }} />\r\n                </div>\r\n            </div>\r\n            <div style={{ margin: '10px', background: 'white', padding: '0px 20px', borderRadius: '6px' }}>\r\n\r\n            <h4 style={{ fontSize: '25px' }}>Chọn thông số để khởi động máy sấy</h4>\r\n            <Slider marks={marksMass} defaultValue={100} max={200} min={0} onChange={this.onChangeMassValue} />\r\n            <Select defaultValue=\"Banana\" style={{ width: 200, margin: '10px 0px',fontSize: '22px' }} onChange={this.onChangeSelect}>\r\n                {this.state.typeOfFruit.map((item) =>\r\n                    <Option style={{ height: '35px' }} key={item.id} value={item.value}>{item.value}</Option>\r\n                )}\r\n            </Select>\r\n            </div>\r\n            <div style={{ backgroundColor: '#f0f2f5', height: '25px' }}></div>\r\n            <div style={{ marginLeft: '35px' }}>\r\n                <div style={{ display: 'flex',paddingTop:'20px' }}>\r\n                    <div style={{ width: '50%' }}>\r\n                        <h4 style={{ fontSize: '25px' }}>\r\n                            Điều khiển máy sấy theo kịch bản\r\n            <span style={{ textTransform: 'uppercase' }}>&nbsp; {this.state.nameOfChoosenScript}</span>\r\n                        </h4>\r\n                    </div>\r\n                    <div style={{ width: '25%', textAlign: 'center' }}>\r\n                        <Button id='btnSend' shape=\"circle\" style={{ fontSize: '25px', height: '85px', width: '85px', fontWeight: 'bold',border: '1px #D7EEF1 solid', backgroundColor: '#F1F8F9' }} onClick={() => this.send()}>\r\n                            SEND\r\n                                </Button>\r\n                    </div>\r\n                    <div style={{ width: '25%', fontSize: '45px' }}>\r\n                        <Button id='btnFinish' style={{borderRadius:'6px', fontSize: '25px', height: '85px', width: '125px', fontWeight: 'bold',border: '1px #FFD3D3 solid', backgroundColor: '#FFE8E8' }} onClick={() => this.finish()}>\r\n                            FINISH\r\n                                </Button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n                {this.state.dataDevice.map((item) =>\r\n                    <div key={item.id} style={{ width: '50%' }}>\r\n                        <Device isDisabled={this.state.isDisabled} isChange={this.state.isChange} status={item.status} id={item.id} changeStatus={this.changeStatus.bind(this)}>{item.title}</Device>\r\n                    </div>\r\n                )}\r\n            </div>\r\n\r\n        </div>\r\n    }\r\n\r\n    renderChooseScript() {\r\n        return <div style={{ margin: '20px', background: 'white', borderRadius: '6px' }}>\r\n            <div style={{ display: 'flex' }}>\r\n                <div style={{ fontSize: '50px', textAlign: 'center', width: '85%' }}>{this.props.location.aboutProps.name}</div>\r\n                <div style={{ width: '15%', margin: '15px' }} onClick={() => this.onClickChooseScript()}>\r\n                    <RetweetOutlined id='sw-method2' style={{ fontSize: '45px', border: '1px #D7EEF1 solid', width: '80px', borderRadius: '10px', backgroundColor: '#F1F8F9' }} />\r\n                </div>\r\n            </div>\r\n            <div style={{ margin: '10px', background: 'white', padding: '0px 20px', borderRadius: '6px' }}>\r\n\r\n                <h4 style={{ fontSize: '25px' }}>Chọn thông số để khởi động máy sấy</h4>\r\n                {/* <Slider marks={marksTemp} defaultValue={100} max={200} min={50} onChange={this.onChangeTempValue}  />\r\n                    <Slider marks={marksHumid} defaultValue={100} max={200} min={50} onChange={this.onChangeHumidValue}  /> */}\r\n                <Slider marks={marksMass} defaultValue={100} max={200} min={0} onChange={this.onChangeMassValue} />\r\n                <Select defaultValue=\"Banana\" style={{ width: '200px', margin: '10px 0px', fontSize: '22px' }} onChange={this.onChangeSelect}>\r\n                    {this.state.typeOfFruit.map((item) =>\r\n                        <Option style={{ height: '35px' }} key={item.id} value={item.value}>{item.value}</Option>\r\n                    )}\r\n                </Select>\r\n            </div>\r\n            <div style={{ padding: '0px 20px', margin: '10px' }}>\r\n                <div style={{ display: 'flex' }}>\r\n                    <div style={{ width: '40%' }}>\r\n\r\n                    </div>\r\n                    <div style={{ width: '20%' }}>\r\n\r\n                    </div>\r\n                    <div style={{ width: '40%' }}>\r\n                        {/* {this.renderPeriod()} */}\r\n                    </div>\r\n                </div>\r\n\r\n                <div style={{ display: 'flex' }}>\r\n                    <div style={{ width: '40%' }}>\r\n                        <h4 style={{ fontSize: '25px' }}>Chọn kịch bản sấy</h4>\r\n                        <Select defaultValue=\"Hãy chọn kịch bản\" style={{ width: 200, margin: '10px 0px', fontSize: '17px' }} onChange={this.onChangeSelectScript}>\r\n                            {this.state.listScript.map((item, idx) =>\r\n                                <Option key={item.name} choosenScript={item.script} value={idx}>{item.name}</Option>\r\n                            )}\r\n                        </Select>\r\n                    </div>\r\n                    {/* <div style={{width:'20%'}}>\r\n                                <Button shape=\"circle\" type=\"primary\" style={{ fontSize: '25px', height:'85px', width:'85px',fontWeight:'bold' }} onClick={()=>this.onClickStartScript()}>\r\n                                    START\r\n                                </Button>\r\n                            </div> */}\r\n                    <div style={{ width: '60%', fontSize: '45px' }} >\r\n                        {this.renderPeriod()}\r\n                        {this.renderTimeActive()}\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n            <div style={{ backgroundColor: '#f0f2f5', height: '25px' }}></div>\r\n            <div style={{ textAlign: 'center', margin: '20px', background: 'white', borderRadius: '6px' }}>\r\n                <h4 style={{ fontSize: '25px' }}>Bảng điều khiển</h4>\r\n                <Button id='btnStart' shape=\"circle\" style={{ fontSize: '25px', height: '85px', width: '85px', fontWeight: 'bold', border: '1px #D7EEF1 solid', backgroundColor: '#F1F8F9' }} onClick={() => this.onClickStartScript()}>\r\n                    START\r\n                        </Button>\r\n                <div style={{ display: 'flex', flexWrap: 'wrap', padding: '25px 15px' }}>\r\n                    {this.state.dataDevice.map((item) =>\r\n                        <div key={item.id} style={{ width: '25%' }}>\r\n                            <MiniDevice isChange={this.state.isChange} status={item.status} id={item.id} changeStatus={this.changeStatus.bind(this)}>{item.title}</MiniDevice>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    }\r\n\r\n    onClickChooseScript() {\r\n        if (this.state.statusMachine === 1) {\r\n            swal({\r\n                title: \"Oppesss...!\",\r\n                text: \"Khổng thể sử dụng chức năng này khi máy đang hoạt động!\",\r\n                icon: \"warning\",\r\n                button: \"OK\",\r\n            });\r\n        } else {\r\n            swal(\"Nhập tên kịch bản mới\", {\r\n                content: \"input\",\r\n                icon: 'info'\r\n            })\r\n                .then((value) => {\r\n                    if (value === '') {\r\n                        return\r\n                    }\r\n                    this.setState({\r\n                        isChooseScript: false,\r\n                        nameOfChoosenScript: value\r\n                    })\r\n                });\r\n        }\r\n    }\r\n\r\n    onClickCreateScript() {\r\n        if (this.state.statusMachine === 1) {\r\n            swal({\r\n                title: \"Oppesss...!\",\r\n                text: \"Khổng thể sử dụng chức năng này khi máy đang hoạt động!\",\r\n                icon: \"warning\",\r\n                button: \"OK\",\r\n            });\r\n        } else {\r\n            this.setState({\r\n                isChooseScript: true\r\n            })\r\n        }\r\n    }\r\n\r\n    showSwitch() {\r\n        if (this.state.isChooseScript === true) {\r\n            return this.renderChooseScript();\r\n        } else {\r\n            return this.renderCreateScript();\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row style={{ margin: '15px' }}>\r\n                    <Col span={12}>\r\n                        <div style={{ minHeight: '400px', margin: '20px', background: 'white', borderRadius: '6px' }}>\r\n                            <Row style={{ paddingTop: '20px' }}>\r\n                                <ChartMachine data={this.state.dataLineChart}></ChartMachine>\r\n                            </Row>\r\n                            <Row style={{ paddingTop: '20px' }}>\r\n                                <ChartMachineBar data={this.state.dataLineChart}></ChartMachineBar>\r\n                            </Row>\r\n\r\n                        </div>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        {this.showSwitch()}\r\n                        {/* <div style={{ margin: '20px', background: 'white', padding: '20px',borderRadius:'6px' }}>\r\n                            \r\n                            <h4 style={{fontSize:'25px'}}>Cài đặt thông số để khởi động máy sấy</h4>\r\n                            <Slider marks={marksTemp} defaultValue={100} max={200} min={50} onChange={this.onChangeTempValue}  />\r\n                            <Slider marks={marksHumid} defaultValue={100} max={200} min={50} onChange={this.onChangeHumidValue}  />\r\n                            <Slider marks={marksMass} defaultValue={100} max={200} min={0} onChange={this.onChangeMassValue}  />\r\n                            <Select defaultValue=\"Banana\" style={{ width: 100, margin:'10px 0px' }} onChange={this.onChangeSelect}>\r\n                                {this.state.typeOfFruit.map((item) =>\r\n                                    <Option key={item.id} value={item.value}>{item.value}</Option>\r\n                                )}\r\n                            </Select>\r\n                            <div>\r\n                                <Button danger style={{ fontSize: '30px', height:'60px' }} onClick={()=>this.onClickSendConfig()}>\r\n                                    START\r\n                                </Button>\r\n                                <Button danger style={{ fontSize: '30px', height:'60px' }} onClick={()=>this.send()}>\r\n                                    SEND SOCKET\r\n                                </Button>\r\n                            </div>\r\n                        </div> */}\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Machine;","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport auth from '../auth';\r\nimport swal from 'sweetalert';\r\nimport './protectRoute.css'\r\nconst protectedRoute = ({component: Component, ...rest}) =>{\r\n    return (\r\n       <Route\r\n        {...rest}\r\n        render = {props => {\r\n            if (auth.isAuthenticated()){\r\n                return <Component {...props} />;\r\n            }else{\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Vui lòng đăng nhập để sử dụng chức năng này!\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                    \r\n                  });\r\n                return (\r\n                    <Redirect \r\n                    to={{\r\n                        pathname:\"/\",\r\n                        state:{\r\n                            from: props.location\r\n                        }\r\n                    }}\r\n                    />\r\n                )\r\n            }\r\n        }}\r\n       />\r\n    )\r\n}; \r\n\r\nexport default protectedRoute","import React, { Component, } from 'react';\r\nimport { Form, Input, Button,Radio, DatePicker} from 'antd';\r\nimport moment from 'moment';\r\nimport {getProfileUser,updateUser} from './../../UserFunction/UserFunction';\r\nimport swal from 'sweetalert';\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\nclass EditUser extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            dob:\"1900/12/12\",\r\n            id: \"-1\",\r\n        }\r\n    }\r\n    \r\n\r\n    async componentDidMount(){\r\n        const user = await getProfileUser({email:this.props.location.aboutProps.email});\r\n        if(user){\r\n            this.formRef.current.setFieldsValue({\r\n                email: user.email,\r\n                phone: user.phone,\r\n                role: user.role,\r\n                first_name: user.first_name,\r\n                last_name: user.last_name,\r\n            })         \r\n            this.setState({\r\n                dob: user.dob,\r\n                id: user.id\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    formRef = React.createRef();\r\n    onFinish = values => {\r\n        // const DOB = values['dob'];\r\n        const result = {\r\n            ...values,\r\n            // 'dob': DOB.format('YYYY-MM-DD'),\r\n        }\r\n        updateUser({id: this.state.id,first_name: result.first_name, last_name: result.last_name, email: result.email, dob: this.state.dob,phone: result.phone, role: result.role}).then(res=>{\r\n            if(res!==\"error\"){\r\n                swal({\r\n                    title: \"Tadaa...!\",\r\n                    text: `${res}`,\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                });\r\n                \r\n            }else{\r\n                swal({\r\n                    title: \"Opposss...!\",\r\n                    text: `Email có thể bị trùng. Hãy thử lại!`,\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                });\r\n            }\r\n        })\r\n        console.log(result);\r\n    };\r\n\r\n    onReset = () => {\r\n        this.formRef.current.resetFields();\r\n    };\r\n\r\n    onFill = () => {\r\n        this.formRef.current.setFieldsValue({\r\n            email: 'Hello world!',\r\n            first_name: 'male',\r\n        });\r\n    };\r\n\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <div style={{margin:'60px', background:'white'}}>\r\n                <h1 style={{margin:'25px',fontSize:'45px'}}>Thông tin tài khoản</h1>\r\n                <div style={{marginRight:'250px',paddingBottom:'15px'}}>\r\n                    <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n                        <Form.Item name=\"email\" label=\"Email\" rules={[\r\n                                                                    { type: 'email',message: 'Email không hợp lệ' },\r\n                                                                    { required: true,message: 'Xin nhập Email' }\r\n                                                                    ]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        {/* <Form.Item\r\n                            name=\"password\"\r\n                            label=\"Password\"\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input your password!',\r\n                            },\r\n                            ]}\r\n                            hasFeedback\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item\r\n                            name=\"confirm\"\r\n                            label=\"Confirm Password\"\r\n                            dependencies={['password']}\r\n                            hasFeedback\r\n                            rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Xin hãy nhập mật khẩu!',\r\n                            },\r\n                            ({ getFieldValue }) => ({\r\n                                validator(rule, value) {\r\n                                if (!value || getFieldValue('password') === value) {\r\n                                    return Promise.resolve();\r\n                                }\r\n                                return Promise.reject('Mật khẩu không trùng khớp!');\r\n                                },\r\n                            }),\r\n                            ]}\r\n                        >\r\n                            <Input.Password />\r\n                        </Form.Item> */}\r\n\r\n                        <Form.Item name=\"role\" label=\"Chức năng\" rules={[{ required: true}]}>\r\n                            <Radio.Group>\r\n                            <Radio value=\"quanly\">Quản lý</Radio>\r\n                            <Radio value=\"vanhanh\">Vận hành</Radio>\r\n                            </Radio.Group>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"first_name\" label=\"Họ và đệm\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Họ và tên đệm!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"last_name\" label=\"Tên\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Tên!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        {/* <Form.Item name=\"dob\" label=\"Ngày sinh\" rules={[{ type: 'object', required: true, message: 'Please select time!' }]}>\r\n                            <DatePicker selected={moment(`${this.state.dob}`,\"YYYY/MM/DD\")} showTime format=\"YYYY/MM/DD\" />\r\n                        </Form.Item> */}\r\n                        <Form.Item label=\"Ngày sinh\" >\r\n                            <DatePicker value={moment(`${this.state.dob}`,\"YYYY/MM/DD\") } format={\"YYYY/MM/DD\"} disabled></DatePicker>\r\n                        </Form.Item>\r\n\r\n                        <Form.Item name=\"phone\" label=\"Số điện thoại\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Số điện thoại!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                            <Button htmlType=\"button\" onClick={this.onReset}>\r\n                                Reset\r\n                            </Button>\r\n                            <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\r\n                                Fill form\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n\r\n            </div>\r\n\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default EditUser;","import React, { Component } from 'react';\r\nimport { Button, Layout, Breadcrumb, Avatar } from 'antd';\r\nimport { AlertOutlined } from '@ant-design/icons';\r\nimport {getAllMachines,deleteMachine} from '../../MachineFunction/MachineFunction';\r\nimport { Link, } from 'react-router-dom';\r\nimport swal from 'sweetalert';\r\nimport socketIOClient from 'socket.io-client';\r\nimport './MachineTable.css';\r\nconst { Content } = Layout;\r\nclass MachineTable extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        const endpoint = \"192.168.100.5:2017\";\r\n        this.state = {\r\n            data:[]\r\n            //     {\r\n            //         key:'4',\r\n            //         position:'Nhà kho B',\r\n            //         code: 'abc123',\r\n            //         description: 'Giam doc dieu khien',\r\n            //         name:'CORONA',\r\n            //         statusMachine: -1 0 1,\r\n            //         dataDevice:[]\r\n            //     }\r\n            // ]\r\n        }\r\n        this.socket = socketIOClient(endpoint);\r\n    }\r\n\r\n    getAckServer = value => {\r\n        console.log(\"Ack from server \"+JSON.stringify(value));\r\n        let result = value.map(({ id: key, ...rest }) => ({ key, ...rest }));\r\n        this.setState({\r\n            data: result\r\n        })   \r\n    }\r\n    \r\n    async componentDidMount(){\r\n        this.socket.on('server-send-ack-machineTable',this.getAckServer);\r\n        const response = await getAllMachines();\r\n        let myData = response;\r\n        let result = myData.map(({ id: key, ...rest }) => ({ key, ...rest }));\r\n        this.setState({\r\n            data: result\r\n        })\r\n    }\r\n\r\n    componentWillUnmount = () => {\r\n        this.socket.close();\r\n    }\r\n\r\n    // Check status to allow go forward\r\n    checkStatusMachine = key => {\r\n        let rs = this.state.data.find(machine=>machine.key===key);\r\n\r\n        if(rs.statusMachine===-1){\r\n            swal({\r\n                title: \"Oppss...!\",\r\n                text: \"Máy này chưa hoạt động!\",\r\n                icon: \"error\",\r\n                button: \"OK\",\r\n              });\r\n        }else{\r\n            this.props.history.push({\r\n                pathname:'/all-machine/'+this.to_slug(rs.name),\r\n                aboutProps:{name:`${rs.name}`,code:`${rs.code}`}\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    deleteMachine = key=> {\r\n        deleteMachine({id:key}).then(res=>{\r\n            console.log(key);\r\n            if(res.error){\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Xóa không thành công!\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                  });\r\n            }else{\r\n\r\n                let tempData = this.state.data.filter(item => item.key !== key)\r\n                console.log(tempData);\r\n                this.setState({\r\n                    data: tempData\r\n                })\r\n                swal({\r\n                    title: \"Tadaaa...!\",\r\n                    text: \"Xóa thành công!\",\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                  });\r\n            }\r\n        })\r\n    }\r\n\r\n    renderOn(){\r\n        return <Avatar size={130} icon={<AlertOutlined />} style={{ backgroundColor: '#87d068' }}></Avatar>\r\n    }\r\n\r\n    renderOff(){\r\n        return  <Avatar size={130} icon={<AlertOutlined />} ></Avatar>\r\n    }\r\n\r\n    renderReady(){\r\n        return  <Avatar size={130} icon={<AlertOutlined />} style={{ backgroundColor: '#EAFA2C' }}></Avatar>\r\n    }\r\n\r\n    showStatusMachine(status){\r\n        if(status === 1) return this.renderOn();\r\n        else if(status===0) return this.renderReady();\r\n        else return this.renderOff();\r\n    }\r\n\r\n    to_slug = (str) => {\r\n            // Chuyển hết sang chữ thường\r\n            str = str.toLowerCase();     \r\n        \r\n            // xóa dấu\r\n            str = str.replace(/(à|á|ạ|ả|ã|â|ầ|ấ|ậ|ẩ|ẫ|ă|ằ|ắ|ặ|ẳ|ẵ)/g, 'a');\r\n            str = str.replace(/(è|é|ẹ|ẻ|ẽ|ê|ề|ế|ệ|ể|ễ)/g, 'e');\r\n            str = str.replace(/(ì|í|ị|ỉ|ĩ)/g, 'i');\r\n            str = str.replace(/(ò|ó|ọ|ỏ|õ|ô|ồ|ố|ộ|ổ|ỗ|ơ|ờ|ớ|ợ|ở|ỡ)/g, 'o');\r\n            str = str.replace(/(ù|ú|ụ|ủ|ũ|ư|ừ|ứ|ự|ử|ữ)/g, 'u');\r\n            str = str.replace(/(ỳ|ý|ỵ|ỷ|ỹ)/g, 'y');\r\n            str = str.replace(/(đ)/g, 'd');\r\n        \r\n            // Xóa ký tự đặc biệt\r\n            str = str.replace(/([^0-9a-z-\\s])/g, '');\r\n        \r\n            // Xóa khoảng trắng thay bằng ký tự -\r\n            str = str.replace(/(\\s+)/g, '-');\r\n        \r\n            // xóa phần dự - ở đầu\r\n            str = str.replace(/^-+/g, '');\r\n        \r\n            // xóa phần dư - ở cuối\r\n            str = str.replace(/-+$/g, '');\r\n        \r\n            // return\r\n            return str;\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Content >\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360, display: 'flex',flexWrap: 'wrap',margin:'35px',borderRadius:'6px' }}>\r\n                    {this.state.data.map((item)=>\r\n                        <div key={item.key.toString()}  style={{backgroundColor: '#f1f1f1', width:'30%', margin:'22px', textAlign: 'center', lineHeight:'75px', fontSize:'30px',borderRadius:'6px'}}>\r\n                        <div id=\"name-machine\" style={{fontSize: \"35px\",color:\"#1890ff\"}} onClick={()=>this.checkStatusMachine(item.key)}>{item.name}</div>\r\n                        {this.showStatusMachine(item.statusMachine)}\r\n                        <div>{item.position}</div>\r\n                        <div>\r\n                                <Button type='link' style={{fontSize: '35px'}}>\r\n                                    <Link to={{\r\n                                        pathname:'/edit-machine',\r\n                                        aboutProps:{\r\n                                            id:`${item.key}`\r\n                                        }\r\n                                    }}>Edit</Link>\r\n                                </Button>\r\n                                <Button type='link' danger style={{fontSize: '35px'}} onClick={()=>this.deleteMachine(item.key)}>\r\n                                    Delete\r\n                                </Button>\r\n                                <Link to={{pathname:'/all-machine/'+this.to_slug(item.name),aboutProps:{name:`${item.name}`,code:`${item.code}`}}}><div style={{fontSize: \"35px\"}} >test</div></Link>\r\n                                \r\n                        </div>\r\n                    </div>\r\n                    )}\r\n                </div>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MachineTable;","import React, { Component } from 'react';\r\nimport {Layout, Breadcrumb,Form, Input, Button} from 'antd'\r\nimport {register} from '../../MachineFunction/MachineFunction'\r\nimport swal from 'sweetalert';\r\n\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\nclass MachineAdd extends Component {\r\n    formRef = React.createRef();\r\n    onFinish = values => {\r\n        console.log(values);\r\n        register({name: values.name,code: values.code, description: values.description,position: values.position}).then(res=>{\r\n            console.log(res);\r\n            if(res.error){\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Tên máy đã tồn tại!\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                  });\r\n            }else{\r\n                swal({\r\n                    title: \"Tadaaa...!\",\r\n                    text: \"Tạo máy thành công!\",\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                  });\r\n            }\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '0 16px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360}}>\r\n                    <h1 style={{margin:'10px',fontSize:'45px'}}>Tạo máy sấy</h1>\r\n                    <div style={{marginRight:'250px',paddingBottom:'15px'}}>\r\n                    <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n                        <Form.Item name=\"name\" label=\"Tên máy sấy\" rules={[\r\n                                                                    { required: true,message: 'Xin nhập Tên máy sấy' }\r\n                                                                    ]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"code\" label=\"Mã CODE máy sấy\" rules={[\r\n                                                                    { required: true,message: 'Xin nhập mã CODE in trên máy sấy' }\r\n                                                                    ]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"position\" label=\"Vị trí đặt máy\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Vị trí đặt máy!', }]}>\r\n                            <Input />\r\n                        </Form.Item>\r\n                        <Form.Item name=\"description\" label=\"Mô tả máy sấy\" rules={[{ required: true,\r\n                                message: 'Xin hãy nhập Mô tả!', }]}>\r\n                            <TextArea row={4} />\r\n                        </Form.Item>\r\n\r\n                        <Form.Item {...tailLayout}>\r\n                            <Button type=\"primary\" htmlType=\"submit\">\r\n                                Submit\r\n                            </Button>\r\n                            <Button htmlType=\"button\" onClick={this.onReset}>\r\n                                Reset\r\n                            </Button>\r\n                            <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\r\n                                Fill form\r\n                            </Button>\r\n                        </Form.Item>\r\n                    </Form>\r\n\r\n                </div>\r\n                </div>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MachineAdd;","import React, { Component } from 'react';\r\nimport { Layout, Breadcrumb, Form, Input, Button } from 'antd'\r\nimport swal from 'sweetalert';\r\nimport {getProfileMachine, updateMachine} from '../../MachineFunction/MachineFunction'\r\n\r\nconst { Content } = Layout;\r\nconst { TextArea } = Input;\r\nconst layout = {\r\n    labelCol: { span: 8 },\r\n    wrapperCol: { span: 16 },\r\n};\r\nconst tailLayout = {\r\n    wrapperCol: { offset: 8, span: 16 },\r\n};\r\nclass MachineEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            id: \"-1\"\r\n        }\r\n    }\r\n\r\n    async componentDidMount(){\r\n        const machine = await getProfileMachine({id:this.props.location.aboutProps.id});\r\n        console.log(machine);\r\n        if(machine){\r\n            this.formRef.current.setFieldsValue({\r\n                name: machine.name,\r\n                description: machine.description,\r\n                position: machine.position\r\n            })         \r\n            this.setState({\r\n                id: machine.id\r\n            })\r\n            \r\n        }\r\n    }\r\n    formRef = React.createRef();\r\n\r\n    onFinish = values => {\r\n        // const DOB = values['dob'];\r\n        const result = {\r\n            ...values,\r\n            // 'dob': DOB.format('YYYY-MM-DD'),\r\n        }\r\n        updateMachine({id: this.state.id,name: result.name, position: result.position, description: result.description,code:result.code}).then(res=>{\r\n            if(res!==\"error\"){\r\n                swal({\r\n                    title: \"Tadaa...!\",\r\n                    text: `${res}`,\r\n                    icon: \"success\",\r\n                    button: \"OK\",\r\n                });\r\n            }else{\r\n                swal({\r\n                    title: \"Opposss...!\",\r\n                    text: `Tên máy có thể bị trùng. Hãy thử lại!`,\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                });\r\n            }\r\n        })\r\n        console.log(result);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '0 16px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item>User</Breadcrumb.Item>\r\n                    <Breadcrumb.Item>Bill</Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                    <h1 style={{ margin: '10px', fontSize: '45px' }}>Chỉnh sửa thông tin máy sấy</h1>\r\n                    <div style={{ marginRight: '250px', paddingBottom: '15px' }}>\r\n                        <Form {...layout} ref={this.formRef} name=\"control-ref\" onFinish={this.onFinish}>\r\n                            <Form.Item name=\"name\" label=\"Tên máy sấy\" rules={[\r\n                                { required: true, message: 'Xin nhập Tên máy sấy' }\r\n                            ]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"position\" label=\"Vị trí đặt máy\" rules={[{\r\n                                required: true,\r\n                                message: 'Xin hãy nhập Vị trí đặt máy!',\r\n                            }]}>\r\n                                <Input />\r\n                            </Form.Item>\r\n                            <Form.Item name=\"description\" label=\"Mô tả máy sấy\" rules={[{\r\n                                required: true,\r\n                                message: 'Xin hãy nhập Mô tả!',\r\n                            }]}>\r\n                                <TextArea row={4} />\r\n                            </Form.Item>\r\n\r\n                            <Form.Item {...tailLayout}>\r\n                                <Button type=\"primary\" htmlType=\"submit\">\r\n                                    Submit\r\n                            </Button>\r\n                                <Button htmlType=\"button\" onClick={this.onReset}>\r\n                                    Reset\r\n                            </Button>\r\n                                <Button type=\"link\" htmlType=\"button\" onClick={this.onFill}>\r\n                                    Fill form\r\n                            </Button>\r\n                            </Form.Item>\r\n                        </Form>\r\n\r\n                    </div>\r\n                </div>\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default MachineEdit;","import React, { Component } from 'react';\r\nimport { Layout, Breadcrumb } from 'antd';\r\nimport { Link, } from 'react-router-dom';\r\nimport './page404.css'\r\nconst { Content } = Layout;\r\nclass page404 extends Component {\r\n    render() {\r\n        return (\r\n            <Content style={{ margin: '0 16px' }}>\r\n            <Breadcrumb style={{ margin: '16px 0' }}>\r\n            </Breadcrumb>\r\n            <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                <div className=\"container\">\r\n                    <h2>Oops! Page not found.</h2>\r\n                    <h1>404</h1>\r\n                    <p>We can't find the page you're looking for.</p>\r\n                    <Link to='/'>GO BACK HOME</Link>\r\n                </div>\r\n            </div>\r\n          </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default page404;","import React, { Component } from 'react';\r\nimport {Layout, Breadcrumb, Table, Button, Tag} from 'antd';\r\nimport {getAllSetups, updateResult, getPDF} from './../MachineFunction/MachineFunction';\r\nimport swal from '@sweetalert/with-react'\r\nconst { Content } = Layout;\r\nconst { Column } = Table;\r\nclass DataStatitics extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={data:[]\r\n            // data:[{\r\n            //         key:1,\r\n            //         nameDevice: \"COVID\",\r\n            //         mass: '50',\r\n            //         typeOfFruit:'Banana',\r\n            //         person:'Nam An',\r\n            //         temp:'50',\r\n            //         humid:'96',\r\n            //         timeStart: new Date().toString().slice(0,24),\r\n            //         timeStop: new Date().toString().slice(0,24),\r\n            //     }\r\n        }\r\n    }\r\n\r\n    \r\n    dataResult=[];\r\n\r\n    generateReport = () => {\r\n        getPDF();\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const myData = await getAllSetups();\r\n        let result = myData.map(({id:key, ...rest})=>({key, ...rest}));\r\n        this.setState({\r\n            data:result\r\n        })\r\n        console.log(this.state.data)\r\n    }\r\n\r\n    handleOnRowShowData= (record) => {\r\n        this.props.history.push({\r\n            pathname:'/data-chart/'+record.key,\r\n            aboutProps:{setupId:`${record.key}`,machine:`${record.code}`}\r\n        })\r\n    }\r\n\r\n    handleOnRowClick = (record,index) => {\r\n        if(record.user_email===localStorage.getItem('useremail')){\r\n            swal(\"Đánh giá kết quả: GOOD, MEDIUM or BAD\", {\r\n                content: \"input\",\r\n                icon: 'info'\r\n            })\r\n            .then((value) => {\r\n                let dataUpdateResult = {id: record.key,result:value};\r\n                console.log(dataUpdateResult);\r\n                this.dataResult.push(dataUpdateResult);\r\n                this.setState(preState => {\r\n                const newItems = [...preState.data];\r\n                let rs = newItems.findIndex(el=> el.key===record.key)\r\n                newItems[rs].result=value;\r\n                return {data: newItems};\r\n            })\r\n              });\r\n        }else{\r\n            swal({\r\n                title: \"Oppss...!\",\r\n                text: \"Bạn không được cấp quyền đánh giá kết quả!\",\r\n                icon: \"warning\",\r\n                button: \"OK\",\r\n              });\r\n        }\r\n        \r\n        \r\n    }\r\n    \r\n    async componentWillUnmount(){\r\n        for(const object of this.dataResult){\r\n            // eslint-disable-next-line\r\n            let res = await updateResult(object)\r\n        }\r\n    }\r\n    \r\n    \r\n    render() {\r\n        return (  \r\n            <Content style={{ margin: '0 16px' }}>\r\n\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                    <Table dataSource={this.state.data} onRow={(record,rowIndex)=>{\r\n                        return {\r\n                            onClick:()=>{this.handleOnRowShowData(record)},\r\n                            onDoubleClick: ()=>{this.handleOnRowClick(record,rowIndex);}\r\n                            \r\n                            }\r\n                    }}>\r\n                        <Column title=\"Name of Device\" dataIndex='machine_name' key='machine_name'></Column>\r\n                        <Column title=\"Mass\" dataIndex='mass' key='mass'></Column>\r\n                        <Column title='Fruit' dataIndex='typeOfFruit' key='typeOfFruit'></Column>\r\n                        <Column title='Script' dataIndex='script' key='script' render ={script=>{\r\n                            return (\r\n                                <span>\r\n                                    <Tag color={'red'}>{script}</Tag>\r\n                                </span>\r\n                            )\r\n                        }}/>\r\n                        <Column title='Person in chagre' dataIndex='user_email' key='user_email'></Column>\r\n                        <Column title='Time start' dataIndex='timeStart' key='timeStart'></Column>\r\n                        <Column title='Time stop' dataIndex='timeFinish' key='timeFinish'></Column>\r\n                        <Column title='Result' dataIndex='result' key='result' render={result=>{\r\n                            let color = result === 'GOOD' ? 'green' : result === 'MEDIUM' ? 'yellow' : 'red'\r\n                            return (\r\n                                <span>\r\n                                    <Tag color={color}>{result}</Tag>\r\n                                </span>\r\n                            )\r\n                        }}></Column>\r\n                    </Table>\r\n\r\n                    <Button onClick={()=>{this.generateReport()}}>Generate Report</Button>\r\n                    \r\n                </div>\r\n\r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DataStatitics;","import React, { Component } from 'react';\r\nimport { Table, Tag, Layout, Breadcrumb } from 'antd';\r\nimport {getAllScripts} from './../MachineFunction/MachineFunction';\r\n// import { Link, } from 'react-router-dom';\r\n// import swal from 'sweetalert';\r\n\r\nconst { Column } = Table;\r\nconst { Content } = Layout;\r\n\r\n\r\nclass Script extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {data:[]};\r\n            // key:1,\r\n            // name:'Chuoi 30Kg',\r\n            // useremail:'abc',\r\n            // totalTime:30000,\r\n            // script:'abc'\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let myData = await getAllScripts();\r\n        let result = myData.map(({id:key, ...rest})=>({key, ...rest}));\r\n        console.log(result)\r\n        this.setState({\r\n            data:result\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <Content style={{ margin: '0 16px' }}>\r\n                <Breadcrumb style={{ margin: '16px 0' }}>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                    <Breadcrumb.Item></Breadcrumb.Item>\r\n                </Breadcrumb>\r\n                <div className=\"site-layout-background\" style={{ padding: 24, minHeight: 360 }}>\r\n                <Table dataSource={this.state.data}>\r\n                    <Column title=\"Name of Script\" dataIndex=\"name\" key='name' />\r\n                    <Column title=\"Total Time\" dataIndex=\"totalTime\" key='totalTime' render={totalTime=>{\r\n                                let time = new Date(totalTime).toISOString().slice(11,19);\r\n                        return (\r\n                            \r\n                            <span>\r\n                                <Tag color={'blue'}>{time}</Tag>\r\n                            </span>\r\n                        )\r\n                    }}/>\r\n                \r\n                    <Column title=\"Person in charge\" dataIndex=\"useremail\" key='username' />\r\n                    <Column title=\"Script\" dataIndex=\"script\" key='script' />\r\n                </Table>\r\n            </div>\r\n            \r\n            </Content>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Script;","import React from 'react';\r\nimport {Route,Redirect} from 'react-router-dom';\r\nimport auth from '../auth';\r\nimport swal from 'sweetalert';\r\nimport './protectRoute.css'\r\nconst acceptQLRoute = ({component: Component, ...rest}) =>{\r\n    return (\r\n       <Route\r\n        {...rest}\r\n        render = {props => {\r\n            if (auth.isAuthenticated()){\r\n                if(auth.isQL()){\r\n                    return <Component {...props} />;\r\n                }\r\n                else{\r\n                    swal({\r\n                        title: \"Oppss...!\",\r\n                        text: \"Chức năng này chỉ dành cho QUẢN LÝ!\",\r\n                        icon: \"error\",\r\n                        button: \"OK\",\r\n                        \r\n                      });\r\n                    return (\r\n                        <Redirect \r\n                        to={{\r\n                            pathname:\"/\",\r\n                            state:{\r\n                                from: props.location\r\n                            }\r\n                        }}\r\n                        />\r\n                    )\r\n                }\r\n            }else{\r\n                swal({\r\n                    title: \"Oppss...!\",\r\n                    text: \"Vui lòng đăng nhập để sử dụng chức năng này!\",\r\n                    icon: \"error\",\r\n                    button: \"OK\",\r\n                    \r\n                  });\r\n                return (\r\n                    <Redirect \r\n                    to={{\r\n                        pathname:\"/\",\r\n                        state:{\r\n                            from: props.location\r\n                        }\r\n                    }}\r\n                    />\r\n                )\r\n            }\r\n        }}\r\n       />\r\n    )\r\n}; \r\n\r\nexport default acceptQLRoute","import React, { Component } from 'react';\r\nimport socketIOClient from 'socket.io-client';\r\nimport {Button} from 'antd';\r\n\r\nclass TestSocket extends Component {\r\n    intervalId=0;\r\n    constructor(props) {\r\n        super(props);\r\n        const endpoint = \"52.163.241.147:80\";\r\n        this.state = {\r\n            clear:false,\r\n            data:[]\r\n            //     {\r\n            //         key:'4',\r\n            //         position:'Nhà kho B',\r\n            //         description: 'Giam doc dieu khien',\r\n            //         name:'CORONA',\r\n            //         status: true\r\n            //     }\r\n            // ]\r\n        }\r\n        this.socket = socketIOClient(endpoint);\r\n    }\r\n    componentDidMount(){\r\n        \r\n        this.socket.on('server-send-ack-machineTable',data=>{\r\n            console.log(data)\r\n        });\r\n        this.socket.on('server-send-ack',data=>{\r\n            console.log(data);\r\n        })\r\n        this.socket.on('server-get-data',data=>{\r\n            this.intervalId = setInterval(() => {\r\n                this.socket.emit('rasp-send-data',{machine:'abc123',temp:12,humid:15,idSetup:data.idSetup});\r\n            }, 3000);\r\n        })\r\n        this.socket.on('server-get-data-complete',data=>{\r\n            clearInterval(this.intervalId);\r\n        })\r\n    }\r\n    onClickTest(){\r\n        this.socket.emit('rasp-ready','abc123');\r\n    }\r\n\r\n    onClickSendData(){\r\n        this.socket.emit('rasp-send-data',{machine:'abc123',temp:35.6,humid:98.6});\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Button  style={{ fontSize: '18px', height:'45px' }} onClick={()=>this.onClickTest()}>\r\n                    Test\r\n                </Button>\r\n                <Button  style={{ fontSize: '18px', height:'45px' }} onClick={()=>this.onClickSendData()}>\r\n                    Send Data\r\n                </Button>\r\n                <Button  style={{ fontSize: '18px', height:'45px' }} onClick={()=>this.onClickSendDataAuto()}>\r\n                    Cancel Data Auto\r\n                </Button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TestSocket;","import React, { Component } from 'react';\r\nimport ChartMachine from '../Machine/ChartMachine/ChartMachine';\r\nimport ChartMachineBar from '../Machine/ChartMachineBar/ChartMachineBar';\r\n\r\nimport {getDataChartSetup} from '../MachineFunction/MachineFunction';\r\nimport {Row, Col} from 'antd';\r\nclass ShowChartSetup extends Component {\r\n    constructor(props) {    \r\n        super(props);  \r\n        this.state={\r\n            dataLineChart:[],\r\n            dataBarChart:[],\r\n        }\r\n    }\r\n    \r\n    dataChart=[];\r\n    dataChartBar=[];\r\n    async componentDidMount(){\r\n        let setup = {id:this.props.location.aboutProps.setupId,code:this.props.location.aboutProps.machine}\r\n        let data = await getDataChartSetup(setup);\r\n        data.forEach(element => {\r\n            this.dataChart.push({x:element.created,y:element.temp})\r\n        });\r\n        console.log(data)\r\n        this.setState({\r\n            dataLineChart:this.dataChart\r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Row style={{margin: '15px'}}>\r\n                    <Col span={12}>\r\n                        <div style={{ minHeight: '400px', margin: '20px', background: 'white', borderRadius: '6px' }}>\r\n                            <Row style={{ paddingTop: '20px' }}>\r\n                                <ChartMachine data={this.state.dataLineChart}></ChartMachine>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                    <Col span={12}>\r\n                        <div style={{ minHeight: '400px', margin: '20px', background: 'white', borderRadius: '6px' }}>\r\n                            <Row style={{ paddingTop: '20px' }}>\r\n                                <ChartMachineBar data={this.state.dataLineChart}></ChartMachineBar>\r\n                            </Row>\r\n                            \r\n                        </div>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShowChartSetup;","import React, { Component } from 'react';\r\nimport { withRouter } from 'react-router'\r\nimport {\r\n    Route,\r\n    Switch,\r\n  } from \"react-router-dom\";\r\nimport UserTable from '../UserPage/UserTable/UserTable';\r\nimport UserAddAccount from '../UserPage/UserAddAccount/UserAddAccount';\r\nimport Login from '../Login/Login';\r\nimport Machine from '../Machine/Machine';\r\nimport ProtectedRoute from '../ProtectRoute/protectRoute';\r\nimport EditUser from '../UserPage/EditUser/EditUser';\r\nimport MachineTable from '../MachinePage/MachineTable/MachineTable';\r\nimport MachineAdd from '../MachinePage/MachineAdd/MachineAdd';\r\nimport MachineEdit from '../MachinePage/MachineEdit/MachineEdit';\r\nimport page404 from '../page404/page404';\r\nimport DataStatitics from '../DataStatitics/DataStatitics';\r\nimport Script from '../Script.js/Script';\r\nimport AcceptQLRoute from '../ProtectRoute/acceptQLRoute';\r\nimport TestSocket from '../TestSocket/TestSocket';\r\nimport ShowChartSetup from '../DataStatitics/ShowChartSetup';\r\n\r\nclass RouterURL extends Component {\r\n\r\n    render() {  \r\n        return (\r\n                <div>\r\n                    <Switch>\r\n                        <Route  exact path=\"/\" component={Login}/>\r\n                        <AcceptQLRoute  path=\"/data-statistics\" component={DataStatitics}/>\r\n                        <ProtectedRoute  path=\"/all-user\" component={UserTable}/>\r\n                        <ProtectedRoute  path=\"/add-user\" component={UserAddAccount}/>\r\n                        <Route  exact path=\"/all-machine\" component={MachineTable}/>\r\n                        <Route  path=\"/all-machine/:name\" component={Machine}/>\r\n                        <Route path=\"/data-chart/:key\" component={ShowChartSetup}/>\r\n                        <ProtectedRoute  path=\"/edit-user\" component={EditUser}/>\r\n                        <ProtectedRoute  path=\"/edit-machine\" component={MachineEdit}/>\r\n                        <ProtectedRoute  path=\"/add-machine\" component={MachineAdd}/>\r\n                        <ProtectedRoute exact path =\"/script\" component={Script}/>\r\n                        <Route  component={TestSocket}/>\r\n\r\n                    </Switch>\r\n                </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default withRouter(RouterURL);","import React, { Component } from 'react';\r\nimport './Navbar.css'\r\nimport { UserOutlined,LogoutOutlined,LoginOutlined } from '@ant-design/icons';\r\nimport { Link, withRouter } from 'react-router-dom'\r\nimport auth from '../auth';\r\nclass Navbar extends Component {\r\n \r\n    logOut(e) {\r\n        e.preventDefault()\r\n        localStorage.clear();\r\n        auth.logout(()=>{\r\n          this.props.history.push(`/`)\r\n        })\r\n    }\r\n\r\n    loginRegLink = (\r\n        <ul style={{height:\"100%\",paddingRight:'15px'}}>\r\n            <li style={{float:\"right\"}} className=\"a-navbar\"><Link to=\"/\" style={{height:\"100%\"}}><LoginOutlined style={{fontSize:\"35px\",paddingTop:\"13px\"}}></LoginOutlined></Link></li>\r\n        </ul>\r\n    )\r\n\r\n    // userLink = (\r\n    //     <ul style={{height:\"100%\",paddingRight:'15px'}}>\r\n    //         <li style={{float:\"right\"}} className=\"a-navbar\"><a href=\"#a\" onClick={this.logOut.bind(this)} style={{height:\"100%\"}}><LogoutOutlined style={{fontSize:\"35px\",paddingTop:\"13px\"}}></LogoutOutlined></a></li>\r\n    //         <li style={{float:\"right\"}} className=\"a-navbar\"><Link to={{pathname:'/edit-user',aboutProps:{email:`${this.temp}`}}} style={{height:\"100%\"}}><UserOutlined style={{fontSize:\"35px\",paddingTop:\"13px\"}}></UserOutlined></Link></li>\r\n    //     </ul>\r\n    // )\r\n    render() { \r\n        return (\r\n            <div style={{height:'100%'}}>\r\n                {localStorage.usertoken ? \r\n                    <ul style={{height:\"100%\",paddingRight:'15px'}}>\r\n                        <li style={{float:\"right\"}} className=\"a-navbar\"><a href=\"#a\" onClick={this.logOut.bind(this)} style={{height:\"100%\"}}><LogoutOutlined style={{fontSize:\"35px\",paddingTop:\"13px\"}}></LogoutOutlined></a></li>\r\n                        <li style={{float:\"right\"}} className=\"a-navbar\"><Link to={{pathname:'/edit-user',aboutProps:{email:`${localStorage.getItem('useremail')}`}}} style={{height:\"100%\"}}><UserOutlined style={{fontSize:\"35px\",paddingTop:\"13px\"}}></UserOutlined></Link></li>\r\n                    </ul> \r\n                    : this.loginRegLink}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(Navbar);","import React, { Component } from 'react';\nimport './App.css';\nimport { Layout } from 'antd';\nimport SiderBar from '../SiderBar/SiderBar';\nimport RouterURL from '../RouterURL/RouterURL';\nimport { BrowserRouter as Router, } from 'react-router-dom';\n\nimport Navbar from '../Navbar/Navbar';\n\n\nconst { Header, Footer} = Layout;\n\nclass App extends Component {\n  \n  render() {\n    return (\n      <Router>\n      <Layout style={{ minHeight: '100vh' }}>     \n        <SiderBar></SiderBar>\n        <Layout className=\"site-layout\">\n          <Header className=\"site-layout-background\" style={{ padding: 0 ,minHeight:50}} >\n            <Navbar></Navbar>\n          </Header>\n          <RouterURL></RouterURL>\n          <Footer style={{ textAlign: 'center' }}>WebApp Control Fruit Dryers ©2020 Created by TNT</Footer>\n        </Layout>\n      </Layout>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}